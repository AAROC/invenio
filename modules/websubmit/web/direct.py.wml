## $Id$

## This file is part of the CERN Document Server Software (CDSware).
## Copyright (C) 2002 CERN.
##
## The CDSware is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 2 of the
## License, or (at your option) any later version.
##
## The CDSware is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with CDSware; if not, write to the Free Software Foundation, Inc.,
## 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

## read config variables:
#include "config.wml"
#include "configbis.wml"

pylibdir = "<LIBDIR>/python"
<protect>
## $Id$
## DO NOT EDIT THIS FILE!  IT WAS AUTOMATICALLY GENERATED FROM CDSware WML SOURCES.

## import interesting modules:import string
import os
import sys
import time
import types
import re

sys.path.append('%s' % pylibdir)
from cdsware.config import cdsname,cdslang
from cdsware.dbquery import run_sql
from cdsware.access_control_engine import acc_authorize_action
from cdsware.access_control_admin import acc_isRole
from cdsware.websubmit_config import *
from cdsware.webpage import page, create_error_box
from cdsware.webuser import getUid, get_email, page_not_authorized
from cdsware.messages import *
from mod_python import apache
from cdsware.access_control_config import CFG_ACCESS_CONTROL_LEVEL_SITE

def index(req,c=cdsname,ln=cdslang,sub=""):

    uid = getUid(req)
    if uid == -1 or CFG_ACCESS_CONTROL_LEVEL_SITE >= 1:
        return page_not_authorized(req, "../direct.py/index")

    myQuery = req.args
    if sub == "":
        return errorMsg("Sorry parameter missing...",req)
    res = run_sql("select docname,actname from sbmIMPLEMENT where subname=%s", (sub,))
    if len(res)==0:
        return errorMsg("Sorry. Can't analyse parameter",req)
    else:
        # get document type
        doctype = res[0][0]
        # get action name
        action = res[0][1]
    # retrieve other parameter values
    params = re.sub("sub=[^&]*","",myQuery)
    # find existing access number
    result = re.search("access=([^&]*)",params)
    if result != None:
        access = result.group(1)
        params = re.sub("access=[^&]*","",params)
    else:
        # create 'unique' access number
        pid = os.getpid()
        now = time.time()
        access = "%i_%s" % (now,pid)
    # retrieve 'dir' value
    res = run_sql ("select dir from sbmACTION where sactname=%s",(action,))
    dir = res[0][0]
    try:
        mainmenu = req.headers_in['Referer']
    except:
        mainmenu = ""
    url = "submit.py?doctype=%s&dir=%s&access=%s&act=%s&startPg=1%s&mainmenu=%s" % (doctype,dir,access,action,params,mainmenu)
    req.err_headers_out.add("Location", url)
    raise apache.SERVER_RETURN, apache.HTTP_MOVED_PERMANENTLY
    return ""

</protect>

def errorMsg(title,req,c=cdsname,ln=cdslang):
    return page(title="error",
                    body = create_error_box(req, title=title,verbose=0, ln=ln),
                    description="%s - Internal Error" % c, 
                    keywords="%s, CDSware, Internal Error" % c,
                    language=ln,
                    urlargs=req.args)
