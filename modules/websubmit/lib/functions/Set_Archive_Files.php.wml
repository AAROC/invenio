## $Id$

## This file is part of the CERN Document Server Software (CDSware).
## Copyright (C) 2002 CERN.
##
## The CDSware is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 2 of the
## License, or (at your option) any later version.
##
## The CDSware is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with CDSware; if not, write to the Free Software Foundation, Inc.,
## 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
<?
<protect>
## $Id$
## DO NOT EDIT THIS FILE!  IT WAS AUTOMATICALLY GENERATED FROM CDSware WML SOURCES.


   ## Description:   function Set_Archive_Files
   ##                This function creates two files containing 1/ the future
   ##		     of the submitted file 2/ The directory in which this file 
   ##		     will be saved
   ## Author:	     T.Baron
   ## PARAMETERS:    pathARCHIVE: path to the final storage directory
   ##                formatARCHIVE: final name of the file
   ##		     variablesARCHIVE: variables derived from the reference
   ##		                  of the document. THese variables may then be
   ##				  used to derive the first two parameters

   function Set_Archive_Files ($param_array,$MAINPATH) 
   {
      global $ARCHIVE,$LINKMANAGER;

      #Set all local variables
      $path = $param_array[pathARCHIVE];
      $format = $param_array[formatARCHIVE];

      #case sensitive file name?
      if (ereg("<CS>",$format))
      {
         $cs = 1;
	 $format = str_replace("<CS>","",$format);
      }
      else
         $cs = 0;

      $variables = $param_array[variablesARCHIVE];
      $repno = $GLOBALS[VARS]->get_report_number();
      if ($cs == 0)
         $repno = strtoupper($repno);
      $repno = ereg_replace(" ","",$repno);
      $repno = ereg_replace("\r","",$repno);
      $repno = ereg_replace("\n","",$repno);

      #if we find <LANG> in the format, replace it with the language
      if (ereg("<LANG>",$format))
      {
         if (is_file("$MAINPATH/LANG"))
	    $language = `cat $MAINPATH/LANG`;
	 elseif (is_file("$MAINPATH/LANG2"))
	    $language = `cat $MAINPATH/LANG2`;
	 else
	    $language = "e";
	 $language=str_replace("\n","",$language);
	 if ($language == "eng") { $language="e"; }
	 if ($language == "fre") { $language="f"; }

	 $format = ereg_replace("<LANG>","$language",$format);
      }

      #retrieve all regexp from repno
      $regexp = ereg_replace("<[^<]*>","(.*)",$variables);
      ereg($regexp,$repno,$variable);
      ereg($regexp,$variables,$varname);
      $i = 1;
      while ($variable[$i] != "")
      {
         $variable[$varname[$i]] = $variable[$i];
	 if ($cs == 0)
	    $variable[$varname[$i]] = strtolower($variable[$varname[$i]]);
	 $i++;
      }

      #creates formatted file name
      $regexp = ereg_replace("<[^<]*>","(.*)",$format);
      ereg($regexp,$format,$name);
      $i = 1;
      while ($name[$i] != "")
      {
         $filename = ereg_replace("[<>]+","",$name[$i]);

	 # General case when a varibale with this name exists
	 if ($variable["$name[$i]"] != "")
	    $format = ereg_replace("$name[$i]",$variable["$name[$i]"],$format);

	 # Case when a file exists with this name (variable
	 # has preeminence over file)
	 elseif (file_exists("$MAINPATH/$filename"))
	 {
	    $fp = fopen("$MAINPATH/$filename","r");
	    $value = fread($fp,filesize("$MAINPATH/$filename"));
	    fclose($fp);
	    $format = ereg_replace("$name[$i]",$value,$format);
	 }
	
	 $i++;
      }

      if ($cs == 0)
         $format = strtolower($format);
      $format = ereg_replace("\r","",$format);
      $format = ereg_replace("\n","",$format);

      #save it
      $file = fopen("$MAINPATH/formatfile","w+");
      fputs ($file,"$format");
      fclose ($file);

      #creates formatted file path
      $regexp = ereg_replace("<[^<]*>","(.*)",$path);
      ereg($regexp,$path,$name);
      $i = 1;
      while ($name[$i] != "")
      {
         $filename = ereg_replace("[<>]+","",$name[$i]);

	 # General case when a varibale with this name exists
	 if ($variable["$name[$i]"] != "")
	    $path = ereg_replace("$name[$i]",$variable["$name[$i]"],$path);

	 # Case when a file exists with this name (variable
	 # has preeminence over file)
	 elseif (file_exists("$MAINPATH/$filename"))
	 {
	    $fp = fopen("$MAINPATH/$filename","r");
	    $value = fread($fp,filesize("$MAINPATH/$filename"));
	    fclose($fp);
	    $path = ereg_replace("$name[$i]",$value,$path);
	 }

	 $i++;
      }

      #save it
      $path = ereg_replace("\r","",$path);
      $path = ereg_replace("\n","",$path);
      $file = fopen("$MAINPATH/archivepath","w+");
      fputs ($file,"$ARCHIVE/$path");
      fclose ($file);

      // We also save the link manager URL (so that bibConvert can use it
      // to create the bibliographic record
      $file = fopen("$MAINPATH/linkmanager","w+");
      fputs ($file,"$LINKMANAGER");
      fclose ($file);
   }
</protect>
?>