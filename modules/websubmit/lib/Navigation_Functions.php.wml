## $Id$

## This file is part of the CERN Document Server Software (CDSware).
## Copyright (C) 2002 CERN.
##
## The CDSware is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 2 of the
## License, or (at your option) any later version.
##
## The CDSware is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with CDSware; if not, write to the Free Software Foundation, Inc.,
## 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
    	    
<?
<protect>
## $Id$
## DO NOT EDIT THIS FILE!  IT WAS AUTOMATICALLY GENERATED FROM CDSware WML SOURCES.
</protect>
?>

<SCRIPT TYPE="text/javascript" LANGUAGE="Javascript1.2">
	var NS4 = (document.layers) ? 1 : 0;
	if (document.getElementById)
		var DOM = 1;
	else
		var DOM = 0;

var DRAG_lastX, DRAG_lastY, DRAG_dragged, dragging;



function drag(e) {
	if (e == null) { e = window.event; }

        if (dragging && DRAG_dragged) {
		menu = getObject(DRAG_dragged);
		oldY = getTop(menu);
		oldX = getLeft(menu);

		if (e.clientX != null && e.pageX == null) {
			scX = parseInt(e.clientX);
			scY = parseInt(e.clientY);
		}
		else {
			scX = parseInt(e.pageX);
			scY = parseInt(e.pageY);
		}

		if (document.body && document.body.scrollLeft) 
		{ 
			leftOffset = parseInt(document.body.scrollLeft);
			topOffset = parseInt(document.body.scrollTop);
		}
		else
		{
			leftOffset = 0;
			topOffset = 0;
		}

               	setLeft(menu,oldX + scX - DRAG_lastX + leftOffset);
                setTop(menu,oldY + scY - DRAG_lastY + topOffset);

		if (e.clientX != null && e.pageX == null) {
	        	DRAG_lastX = parseInt(e.clientX);
	        	DRAG_lastY = parseInt(e.clientY);
		}
		else {
	        	DRAG_lastX = parseInt(e.pageX);
	        	DRAG_lastY = parseInt(e.pageY);
		}
                return true;
        }
        else {
                return true;
        }
}

function begindrag(e,menuName) {
	if (e == null){ e = this.event; }
	menu = getObject(menuName);

	if (e.which == 1 || e.button == 1)
	{
		if (document.all)
		{
     		   	menu.onmousemove = drag;
			DRAG_dragged = menuName;
		}
		else if (DOM) {
     		   	menu.onmousemove = drag;
			DRAG_dragged = menuName;
		}
		else if (NS4)
		{
			DRAG_dragged = this.name;
        	        this.captureEvents(Event.MOUSEMOVE);
     		   	this.onmousemove = drag;
		}

		if (e.clientX != null && e.pageX == null) {
	        	DRAG_lastX = parseInt(e.clientX);
	        	DRAG_lastY = parseInt(e.clientY);
		}
		else {
	        	DRAG_lastX = parseInt(e.pageX);
	        	DRAG_lastY = parseInt(e.pageY);
		}

        	dragging=true;

		return true;
	}
	else
	{
             	/*Do any right mouse button processing here*/
             	return true;
	}
}


function enddrag(e) {
	if (dragging)
	{
		if (e.which == 1 || e.button == 1)
		{
			menu = getObject(DRAG_dragged);
			if (document.all)
			{
     			   	menu.onmousemove = null;
			}
			else if (DOM) {
     		   		menu.onmousemove = null;
			}
			else if (NS4)
			{
        		        window.releaseEvents(Event.MOUSEMOVE);
     			   	window.onmousemove = null;
			}

        	       	DRAG_dragging=false;
			DRAG_dragged = '';
			return true;
		}
        	else {
        	        /*Do any right mouse button processing here*/
        	        return true;
        	}
	}
}

function PlaceLayers(e,menuName) {
	menu = getObject(menuName);

	if (e.clientX && !e.pageX) {
		scX = parseInt(e.clientX);
		scY = parseInt(e.clientY);
	}
	else {
		scX = parseInt(e.pageX);
		scY = parseInt(e.pageY);
	}

	if (document.body && (document.body.scrollLeft || document.body.scrollTop)) 
	{ 
		leftOffset = parseInt(document.body.scrollLeft);
		topOffset = parseInt(document.body.scrollTop);
	}
	else
	{
		leftOffset = 0;
		topOffset = 0;
	}

	newX = scX + leftOffset;
	newY = scY + topOffset;

        setLeft(menu,newX);
	setTop(menu,newY);
}

function popUp(menuName,on,e) {
	if (allLoaded)
	{
               if (on) {
                       PlaceLayers(e,menuName);
                       if (NS4) {
                               	document.layers[menuName].visibility = "show";
                       } else {
				menu = getObject(menuName);
 	                      	menu.style.visibility = "visible";
                       }
               } else {
                       if (NS4) {
                               	document.layers[menuName].visibility = "hide";
                       } else {
				menu = getObject(menuName);
                                menu.style.visibility = "hidden";
                       }
               }
	}
}


function setSummary()
{
	if (NS4) {
		document.forms[1].summaryX.value = document.layers['Summary'].left;
		document.forms[1].summaryY.value = document.layers['Summary'].top;
	}
	else {
		summary = getObject('Summary');
		document.forms[1].summaryX.value = summary.style.pixelLeft;
		document.forms[1].summaryY.value = summary.style.pixelTop;	}
}



function summary_hide(e)
{
	if (NS4) {
		scX=e.pageX;
		scY=e.pageY;
		if ( (scX < document.layers['Summary'].left) ||
			(scX > document.layers['Summary'].left + document.layers['Summary'].clip.width ) ||
			(scY > document.layers['Summary'].top + document.layers['Summary'].clip.height) ||
			(scY < document.layers['Summary'].top))
		{
			document.layers['Summary'].visibility = "hidden";
		}
	} else {
		summary = getObject('Summary');
		scX=e.clientX;
		scY=e.clientY;
		if ( (scX < summary.style.pixelLeft) ||
			(scX > summary.offsetWidth + summary.style.pixelLeft) ||
			(scY > summary.offsetHeight + summary.style.pixelTop) ||
			(scY < summary.style.pixelTop))
		{
			summary.style.visibility = "hidden";
		}
	}
}

////////////////////////////////////////////////////////////////////////////
//	Multibrowser positioning javascript functions
////////////////////////////////////////////////////////////////////////////


function getStyle(object)
{
	if (object.left) {
		return object;
	}
	else if(object.style) {
		return object.style;
	}
	else if (document.defaultView) {
		return document.defaultView.getComputedStyle(object,null);
	}
	else {
		return null;
	}
}

function getWidth(object)
{
	if (object.clip) { return parseInt(object.clip.width); }
	if (object.children && object.tagName == 'DIV')
	{
		styleobject = getStyle(object.children[0].children[0]);
	}
	else
	{
		styleobject = getStyle(object);
	}
	if (object.offsetWidth)
	{
		return parseInt(object.offsetWidth);
	}
	else if (styleobject)
	{
		return parseInt(styleobject.pixelWidth);
	}
}


function getHeight(object)
{
	if (object.clip) { return parseInt(object.clip.height); }
	if (object.children && object.tagName == 'DIV')
	{
		styleobject = getStyle(object.children[0]);
	}
	else
	{
		styleobject = getStyle(object);
	}
	if (object.offsetHeight)
	{
		return parseInt(object.offsetHeight);
	}
	else if (object.style)
	{
		return parseInt(object.style.pixelHeight);
	}
}

function getTop(object)
{
	if (object.pageY) { return parseInt(object.pageY); }
	 if (object.offsetTop != null)
	{
		val = object.offsetTop;
    		while ((object = object.offsetParent )!=null) {
                	val += object["offsetTop"];
        	}
		return parseInt(val);
	}
	return 0;
}

function getLeft(object)
{
	if (object.pageX) { return parseInt(object.pageX); }
	if (object.offsetLeft != null)
	{
		val = object.offsetLeft;
    		while ((object = object.offsetParent ) != null) {
                		val += object["offsetLeft"];
        	}
		return parseInt(val);
	}
}

function setTop(object,topvalue)
{
	styleobject = getStyle(object);
	if (styleobject != null) {
		styleobject.top = parseInt(topvalue); }
	else if (object.pageY != null) { 
		object.pageY = parseInt(topvalue); return; }
}

function setLeft(object,leftvalue)
{
	styleobject = getStyle(object);
	if (styleobject != null) {
		styleobject.left = parseInt(leftvalue);}
	else if (object.pageX != null) { object.pageX = parseInt(leftvalue); return; }
}

function isVisible(object)
{
	if (object.style && object.style.visibility == "visible")
	{
		return true;
	}
	else if (object.visibility && object.visibility == "show")
	{
		return true;
	}
	else
	{
		return false;
	}
}

function setVisible(object)
{
	if (object.style)
	{
		 object.style.visibility = "visible";
	}
	else if (object.visibility)
	{
		object.visibility = "show";
	}
}

function setInvisible(object)
{
	if (object.style)
	{
		 object.style.visibility = "HIDDEN";
	}
	else if (object.visibility)
	{
		object.visibility = "hide";
	}
}	

function popUpTextWindow(menuName,visible,e)
{
	if (e == null) {
		e = this.event;
	}

	menu = getObject(menuName);
	textwnd = getObject('TEXTWND');

	if (e.clientY != null && e.pageY == null) {
		scY = parseInt(e.clientY);
	}
	else {
		scY = parseInt(e.pageY);
	}

	if (document.body && document.body.scrollTop) {
		topOffset = parseInt(document.body.scrollTop);
	}
	else {
		topOffset = 0;
	}

	setTop(menu,(scY - 80 + topOffset));
	setLeft(menu,getLeft(textwnd));

	if (visible)
	{
		setVisible(menu);
	}
	else
	{
		setInvisible(menu);
	}
}

function getObject(menuName)
{
	if (document.all) { 
		return document.all[menuName];
	}
	else if (DOM == 1 && menuName) {
		return document.getElementById(menuName);
	}
        else if (document.layers && menuName && document.layers[menuName] != null) 
	{
		return document.layers[menuName];
	}
	else 
	{
		return 0;
	}
}


</SCRIPT>
