## -*- mode: html; coding: utf-8; -*-
## $Id$
##
## This file is part of CDS Invenio.
## Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007 CERN.
##
## CDS Invenio is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 2 of the
## License, or (at your option) any later version.
##
## CDS Invenio is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with CDS Invenio; if not, write to the Free Software Foundation, Inc.,
## 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

<!-- WebDoc-Page-Title: _(Search Guide)_ -->
<!-- WebDoc-Page-Navbar-Name: search-new -->
<!-- WebDoc-Page-Navtrail-Previous-Links: <a class="navtrail" href="<WEBURL>admin/<lang:star: index.*.html>">_(Help Central)_</a> &gt; <a class="navtrail" href="<WEBURL>/help/search/<lang:star: index.*.html>">_(Search Help)_</a> -->
<!-- WebDoc-Page-Navbar-Select: guide -->

<lang>
<en>
<p>Our search engine tries to offer today's typical web searching
experience, as gained with popular search engines such as <a
href="http://google.com/">Google</a>.  The nature of bibliographic
searching differs from that of a web page searching, though.  We
provide many extensions to enable a complex and precise structured
search, including an combined metadata, fulltext and reference search
in one go.  This page lists several tips and tricks that you may find
useful to this effect.
</en>
<fr>
<p>Our search engine tries to offer today's typical web searching
experience, as gained with popular search engines such as <a
href="http://google.com/">Google</a>.  The nature of bibliographic
searching differs from that of a web page searching, though.  We
provide many extensions to enable a complex and precise structured
search, including an combined metadata, fulltext and reference search
in one go.  This page lists several tips and tricks that you may find
useful to this effect.
</fr>
<de>
<p>Unsere Suchmaschine bietet den heutigen Stand der Web-Such
Technologie, die auch von bekannten Suchmaschinen wie zum Beispiel
<a href="http://google.com/">Google</a> angeboten werden. Im Detail
unterscheidet sich jedoch die bibliographische Suche von einer
Web-Suche. Wir bieten mehrere Erweiterungen an, damit eine komplexe
und genau strukturierte Suche möglich wird, inklusiv einer
kombinierten Metadatensuche, Volltextsuche und Referenzsuche. Diese
Seite stellt Tipps und Tricks vor, die für eine effektive Suche
nützlich sind.
</de>
<es>
<p> El motor de búsqueda de este sistema trata de ofrecer la
tecnología más actual de búsqueda web, desarrollada por buscadores tan
populares como <A href = "http://google.com/"> Google </A>.  Sin
embargo, la naturaleza de una búsqueda bibliográfica difiere
considerablemente de la de una página Web. La alternativa propuesta
es la de proporcionar numerosas extensiones que hagan
posible búsquedas de estructura compleja y precisa, incluso combinando
metadatos, texto completo y citas bibliográficas en una misma
consulta.  Esta página ofrece una serie consejos útiles para conseguir
una búsqueda más eficaz.
</es>
<ca>
<p> El motor de cerca d'aquest sistema tracta d'oferir la tecnologia
més actual de cerca web, desenvolupada per cercadors tant populars com
<A href = "http://google.com/"> Google </A>.  La naturalesa d'una
cerca bibliogràfica, però, difereix considerablement de la d'una
página Web. L'alternativa proposada és la de proporcionar
nombroses extensions que permetin cerques d'estructura complexa i
precisa, inclosa la combinació de metadades, text complet i
referències bibliogràfiques a una mateixa cerca.  Aquesta pàgina
ofereix una sèrie de consells útils per aconseguir una cerca més
eficaç.
</ca>
<pl>
<p>Our search engine tries to offer today's typical web searching
experience, as gained with popular search engines such as <a
href="http://google.com/">Google</a>.  The nature of bibliographic
searching differs from that of a web page searching, though.  We
provide many extensions to enable a complex and precise structured
search, including an combined metadata, fulltext and reference search
in one go.  This page lists several tips and tricks that you may find
useful to this effect.
</pl>
<pt>
<p>Our search engine tries to offer today's typical web searching
experience, as gained with popular search engines such as <a
href="http://google.com/">Google</a>.  The nature of bibliographic
searching differs from that of a web page searching, though.  We
provide many extensions to enable a complex and precise structured
search, including an combined metadata, fulltext and reference search
in one go.  This page lists several tips and tricks that you may find
useful to this effect.
</pt>
<it>
<p>Our search engine tries to offer today's typical web searching
experience, as gained with popular search engines such as <a
href="http://google.com/">Google</a>.  The nature of bibliographic
searching differs from that of a web page searching, though.  We
provide many extensions to enable a complex and precise structured
search, including an combined metadata, fulltext and reference search
in one go.  This page lists several tips and tricks that you may find
useful to this effect.
</it>
<ru>
<p>Our search engine tries to offer today's typical web searching
experience, as gained with popular search engines such as <a
href="http://google.com/">Google</a>.  The nature of bibliographic
searching differs from that of a web page searching, though.  We
provide many extensions to enable a complex and precise structured
search, including an combined metadata, fulltext and reference search
in one go.  This page lists several tips and tricks that you may find
useful to this effect.
</ru>
<sk>
<p>Our search engine tries to offer today's typical web searching
experience, as gained with popular search engines such as <a
href="http://google.com/">Google</a>.  The nature of bibliographic
searching differs from that of a web page searching, though.  We
provide many extensions to enable a complex and precise structured
search, including an combined metadata, fulltext and reference search
in one go.  This page lists several tips and tricks that you may find
useful to this effect.
</sk>
<cs>
<p>Our search engine tries to offer today's typical web searching
experience, as gained with popular search engines such as <a
href="http://google.com/">Google</a>.  The nature of bibliographic
searching differs from that of a web page searching, though.  We
provide many extensions to enable a complex and precise structured
search, including an combined metadata, fulltext and reference search
in one go.  This page lists several tips and tricks that you may find
useful to this effect.
</cs>
<no>
<p>Our search engine tries to offer today's typical web searching
experience, as gained with popular search engines such as <a
href="http://google.com/">Google</a>.  The nature of bibliographic
searching differs from that of a web page searching, though.  We
provide many extensions to enable a complex and precise structured
search, including an combined metadata, fulltext and reference search
in one go.  This page lists several tips and tricks that you may find
useful to this effect.
</no>
<sv>
<p>Our search engine tries to offer today's typical web searching
experience, as gained with popular search engines such as <a
href="http://google.com/">Google</a>.  The nature of bibliographic
searching differs from that of a web page searching, though.  We
provide many extensions to enable a complex and precise structured
search, including an combined metadata, fulltext and reference search
in one go.  This page lists several tips and tricks that you may find
useful to this effect.
</sv>
<el>
<p>Our search engine tries to offer today's typical web searching
experience, as gained with popular search engines such as <a
href="http://google.com/">Google</a>.  The nature of bibliographic
searching differs from that of a web page searching, though.  We
provide many extensions to enable a complex and precise structured
search, including an combined metadata, fulltext and reference search
in one go.  This page lists several tips and tricks that you may find
useful to this effect.
</el>
<uk>
<p>Our search engine tries to offer today's typical web searching
experience, as gained with popular search engines such as <a
href="http://google.com/">Google</a>.  The nature of bibliographic
searching differs from that of a web page searching, though.  We
provide many extensions to enable a complex and precise structured
search, including an combined metadata, fulltext and reference search
in one go.  This page lists several tips and tricks that you may find
useful to this effect.
</uk>
<ja>
<p>Our search engine tries to offer today's typical web searching
experience, as gained with popular search engines such as <a
href="http://google.com/">Google</a>.  The nature of bibliographic
searching differs from that of a web page searching, though.  We
provide many extensions to enable a complex and precise structured
search, including an combined metadata, fulltext and reference search
in one go.  This page lists several tips and tricks that you may find
useful to this effect.
</ja>
<bg>
<p>Our search engine tries to offer today's typical web searching
experience, as gained with popular search engines such as <a
href="http://google.com/">Google</a>.  The nature of bibliographic
searching differs from that of a web page searching, though.  We
provide many extensions to enable a complex and precise structured
search, including an combined metadata, fulltext and reference search
in one go.  This page lists several tips and tricks that you may find
useful to this effect.
</bg>
<hr>
<p>Our search engine tries to offer today's typical web searching
experience, as gained with popular search engines such as <a
href="http://google.com/">Google</a>.  The nature of bibliographic
searching differs from that of a web page searching, though.  We
provide many extensions to enable a complex and precise structured
search, including an combined metadata, fulltext and reference search
in one go.  This page lists several tips and tricks that you may find
useful to this effect.
</hr>
<zh_CN>
<p>Our search engine tries to offer today's typical web searching
experience, as gained with popular search engines such as <a
href="http://google.com/">Google</a>.  The nature of bibliographic
searching differs from that of a web page searching, though.  We
provide many extensions to enable a complex and precise structured
search, including an combined metadata, fulltext and reference search
in one go.  This page lists several tips and tricks that you may find
useful to this effect.
</zh_CN>
<zh_TW>
<p>Our search engine tries to offer today's typical web searching
experience, as gained with popular search engines such as <a
href="http://google.com/">Google</a>.  The nature of bibliographic
searching differs from that of a web page searching, though.  We
provide many extensions to enable a complex and precise structured
search, including an combined metadata, fulltext and reference search
in one go.  This page lists several tips and tricks that you may find
useful to this effect.
</zh_TW>
</lang>

<lang>
<en>
<h3><strong class="headerboxbodylogo">Index</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Simple versus advanced search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Search guidance</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Searching for words versus phrases</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolean queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Special characters and punctuation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">International characters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Word truncation/stemming</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Structured metadata search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Span queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Combined metadata/fulltext/citation search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">Frequently asked questions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">How to wisely choose your search terms (speed-wise)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">How to search for publications by a given author</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">How to sort according to a certain pattern</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">How to get documents from other servers (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">How to search in fulltext files</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">How to search for citations</a>
</en>
<fr>
<h3><strong class="headerboxbodylogo">Index</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Simple versus advanced search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Search guidance</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Searching for words versus phrases</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolean queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Special characters and punctuation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">International characters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Word truncation/stemming</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Structured metadata search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Span queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Combined metadata/fulltext/citation search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">Frequently asked questions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">How to wisely choose your search terms (speed-wise)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">How to search for publications by a given author</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">How to sort according to a certain pattern</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">How to get documents from other servers (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">How to search in fulltext files</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">How to search for citations</a>
</fr>
<de>
<h3><strong class="headerboxbodylogo">Inhaltsverzeichnis</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Einfache versus erweiterte Suche</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Grundlagen</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Suche nach Wörtern und Wortgruppen</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolsche Suche</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Spezielle Zeichen und Notation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">Internationale Zeichen</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Trunkierung</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Strukturierte Metadatensuche</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Bereichs-Recherche</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Kombinierte Metadaten-/Volltext-/Zitatsuche</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">FAQ</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">Wie wähle ich am geschicktesten meinen Suchbegriff</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">Wie suche ich nach Publikationen eines bestimmten Autors</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">Wie lasse ich Ergebnisse auf eine bestimmte Weise sortieren</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">Wie bekomme ich Dokumente anderer Server (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">Wie kann ich in verknüpften Volltextdateien suchen</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">Wie kann ich nach Zitaten suchen</a>
</de>
<es>
<H3><strong class="headerboxbodylogo">Índice</strong></H3>
&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#simpleadvanced">Búsqueda simple versus avanzada</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#guidance">Búsqueda guiada</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#words-vs-phrases">Búsqueda por palabras versus búsqueda por frases</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#boolean">Consultas booleanas</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#punctuation">Caracteres especiales y puntuación</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#unicode">Caracteres internacionales</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#wildcard">Truncamientos y búsquedas por raíz</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#structured">Búsqueda por metadatos estructurados</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#regexp">Expresiones regulares</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#span">Consultas por rango</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#combined">Combinación de metadatos/texto completo/cita bibliográfica</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#howto">Preguntas frecuentes</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#howto-choose-terms">Elegir correctamente los términos de búsqueda (speed-wise)</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#howto-search-for-author">¿Cómo localizar publicaciones a partir del autor?</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#howto-sort-pattern">¿Cómo ordenar acorde a cierto patrón de ordenación?</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#howto-hepdoc">¿Cómo obtener documentos de otros servidores? (Google, SPIRES, KEK)</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#howto-fulltext">¿Cómo buscar en ficheros a texto completo?</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#howto-citations">¿Cómo buscar citas bibliogáficas?</A>
</es>
<ca>
<H3><strong class="headerboxbodylogo">Índex</strong></H3>
&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#simpleadvanced">Cerca simple versus avançada</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#guidance">Cerca guiada</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#words-vs-phrases">Cerca per paraules versus cerca per frases</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#boolean">Consultes booleanes</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#punctuation">Caracters especials i puntuació</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#unicode">Caracters internacionals</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#wildcard">Truncaments i cercques per arrel</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#structured">Cerca por metadadess estructurades</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#regexp">Expressions regulars</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#span">Consultes per rang</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#combined">Combinació de metadades/text complet/referència bibliogràfica</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#howto">Preguntes freqüents</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#howto-choose-terms">Escollir correctament els térmes de cerca (speed-wise)</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#howto-search-for-author">Com localitzar publicacions a partir de l'autor?</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#howto-sort-pattern">Com ordenar d'acord a un patró d'ordenació?</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#howto-hepdoc">Com obtenir documents d'altres servidors? (Google, SPIRES, KEK)</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#howto-fulltext">Cómo cercar a fitxers a text complet?</A>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#howto-citations">Cómo cercar referències bibliogàfiques?</A>
</ca>
<pl>
<h3><strong class="headerboxbodylogo">Index</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Simple versus advanced search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Search guidance</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Searching for words versus phrases</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolean queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Special characters and punctuation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">International characters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Word truncation/stemming</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Structured metadata search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Span queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Combined metadata/fulltext/citation search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">Frequently asked questions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">How to wisely choose your search terms (speed-wise)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">How to search for publications by a given author</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">How to sort according to a certain pattern</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">How to get documents from other servers (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">How to search in fulltext files</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">How to search for citations</a>
</pl>
<pt>
<h3><strong class="headerboxbodylogo">Index</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Simple versus advanced search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Search guidance</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Searching for words versus phrases</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolean queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Special characters and punctuation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">International characters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Word truncation/stemming</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Structured metadata search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Span queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Combined metadata/fulltext/citation search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">Frequently asked questions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">How to wisely choose your search terms (speed-wise)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">How to search for publications by a given author</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">How to sort according to a certain pattern</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">How to get documents from other servers (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">How to search in fulltext files</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">How to search for citations</a>
</pt>
<it>
<h3><strong class="headerboxbodylogo">Index</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Simple versus advanced search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Search guidance</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Searching for words versus phrases</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolean queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Special characters and punctuation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">International characters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Word truncation/stemming</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Structured metadata search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Span queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Combined metadata/fulltext/citation search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">Frequently asked questions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">How to wisely choose your search terms (speed-wise)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">How to search for publications by a given author</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">How to sort according to a certain pattern</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">How to get documents from other servers (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">How to search in fulltext files</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">How to search for citations</a>
</it>
<ru>
<h3><strong class="headerboxbodylogo">Index</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Simple versus advanced search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Search guidance</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Searching for words versus phrases</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolean queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Special characters and punctuation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">International characters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Word truncation/stemming</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Structured metadata search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Span queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Combined metadata/fulltext/citation search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">Frequently asked questions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">How to wisely choose your search terms (speed-wise)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">How to search for publications by a given author</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">How to sort according to a certain pattern</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">How to get documents from other servers (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">How to search in fulltext files</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">How to search for citations</a>
</ru>
<sk>
<h3><strong class="headerboxbodylogo">Index</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Simple versus advanced search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Search guidance</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Searching for words versus phrases</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolean queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Special characters and punctuation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">International characters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Word truncation/stemming</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Structured metadata search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Span queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Combined metadata/fulltext/citation search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">Frequently asked questions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">How to wisely choose your search terms (speed-wise)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">How to search for publications by a given author</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">How to sort according to a certain pattern</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">How to get documents from other servers (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">How to search in fulltext files</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">How to search for citations</a>
</sk>
<cs>
<h3><strong class="headerboxbodylogo">Index</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Simple versus advanced search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Search guidance</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Searching for words versus phrases</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolean queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Special characters and punctuation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">International characters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Word truncation/stemming</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Structured metadata search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Span queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Combined metadata/fulltext/citation search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">Frequently asked questions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">How to wisely choose your search terms (speed-wise)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">How to search for publications by a given author</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">How to sort according to a certain pattern</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">How to get documents from other servers (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">How to search in fulltext files</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">How to search for citations</a>
</cs>
<no>
<h3><strong class="headerboxbodylogo">Index</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Simple versus advanced search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Search guidance</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Searching for words versus phrases</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolean queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Special characters and punctuation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">International characters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Word truncation/stemming</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Structured metadata search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Span queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">Frequently asked questions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Combined metadata/fulltext/citation search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">How to wisely choose your search terms (speed-wise)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">How to search for publications by a given author</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">How to sort according to a certain pattern</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">How to get documents from other servers (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">How to search in fulltext files</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">How to search for citations</a>
</no>
<sv>
<h3><strong class="headerboxbodylogo">Index</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Simple versus advanced search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Search guidance</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Searching for words versus phrases</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolean queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Special characters and punctuation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">International characters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Word truncation/stemming</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Structured metadata search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Span queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Combined metadata/fulltext/citation search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">Frequently asked questions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">How to wisely choose your search terms (speed-wise)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">How to search for publications by a given author</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">How to sort according to a certain pattern</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">How to get documents from other servers (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">How to search in fulltext files</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">How to search for citations</a>
</sv>
<el>
<h3><strong class="headerboxbodylogo">Index</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Simple versus advanced search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Search guidance</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Searching for words versus phrases</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolean queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Special characters and punctuation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">International characters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Word truncation/stemming</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Structured metadata search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Span queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Combined metadata/fulltext/citation search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">Frequently asked questions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">How to wisely choose your search terms (speed-wise)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">How to search for publications by a given author</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">How to sort according to a certain pattern</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">How to get documents from other servers (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">How to search in fulltext files</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">How to search for citations</a>
</el>
<uk>
<h3><strong class="headerboxbodylogo">Index</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Simple versus advanced search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Search guidance</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Searching for words versus phrases</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolean queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Special characters and punctuation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">International characters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Word truncation/stemming</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Structured metadata search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Span queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Combined metadata/fulltext/citation search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">Frequently asked questions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">How to wisely choose your search terms (speed-wise)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">How to search for publications by a given author</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">How to sort according to a certain pattern</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">How to get documents from other servers (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">How to search in fulltext files</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">How to search for citations</a>
</uk>
<ja>
<h3><strong class="headerboxbodylogo">Index</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Simple versus advanced search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Search guidance</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Searching for words versus phrases</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolean queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Special characters and punctuation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">International characters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Word truncation/stemming</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Structured metadata search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Span queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Combined metadata/fulltext/citation search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">Frequently asked questions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">How to wisely choose your search terms (speed-wise)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">How to search for publications by a given author</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">How to sort according to a certain pattern</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">How to get documents from other servers (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">How to search in fulltext files</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">How to search for citations</a>
</ja>
<bg>
<h3><strong class="headerboxbodylogo">Index</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Simple versus advanced search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Search guidance</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Searching for words versus phrases</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolean queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Special characters and punctuation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">International characters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Word truncation/stemming</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Structured metadata search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Span queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Combined metadata/fulltext/citation search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">Frequently asked questions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">How to wisely choose your search terms (speed-wise)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">How to search for publications by a given author</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">How to sort according to a certain pattern</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">How to get documents from other servers (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">How to search in fulltext files</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">How to search for citations</a>
</bg>
<hr>
<h3><strong class="headerboxbodylogo">Index</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Simple versus advanced search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Search guidance</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Searching for words versus phrases</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolean queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Special characters and punctuation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">International characters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Word truncation/stemming</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Structured metadata search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Span queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Combined metadata/fulltext/citation search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">Frequently asked questions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">How to wisely choose your search terms (speed-wise)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">How to search for publications by a given author</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">How to sort according to a certain pattern</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">How to get documents from other servers (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">How to search in fulltext files</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">How to search for citations</a>
</hr>
<zh_CN>
<h3><strong class="headerboxbodylogo">Index</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Simple versus advanced search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Search guidance</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Searching for words versus phrases</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolean queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Special characters and punctuation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">International characters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Word truncation/stemming</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Structured metadata search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Span queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Combined metadata/fulltext/citation search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">Frequently asked questions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">How to wisely choose your search terms (speed-wise)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">How to search for publications by a given author</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">How to sort according to a certain pattern</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">How to get documents from other servers (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">How to search in fulltext files</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">How to search for citations</a>
</zh_CN>
<zh_TW>
<h3><strong class="headerboxbodylogo">Index</strong></h3>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#simpleadvanced">Simple versus advanced search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#guidance">Search guidance</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#words-vs-phrases">Searching for words versus phrases</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#boolean">Boolean queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#punctuation">Special characters and punctuation</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#unicode">International characters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#wildcard">Word truncation/stemming</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#structured">Structured metadata search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#regexp">Regular expressions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#span">Span queries</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#combined">Combined metadata/fulltext/citation search</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto">Frequently asked questions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-choose-terms">How to wisely choose your search terms (speed-wise)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-search-for-author">How to search for publications by a given author</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-sort-pattern">How to sort according to a certain pattern</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-hepdoc">How to get documents from other servers (Google, SPIRES, KEK)</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-fulltext">How to search in fulltext files</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#howto-citations">How to search for citations</a>
</zh_TW>
</lang>
<h3><a name="simpleadvanced">
<lang>
<en>Simple versus advanced search</en>
<fr>Simple versus advanced search</fr>
<de>Einfache versus erweiterte Suche</de>
<es>Búsqueda simple versus avanzada</es>
<ca>Cerca simple versus avançada</ca>
<pl>Simple versus advanced search</pl>
<pt>Simple versus advanced search</pt>
<it>Simple versus advanced search</it>
<ru>Simple versus advanced search</ru>
<sk>Simple versus advanced search</sk>
<cs>Simple versus advanced search</cs>
<no>Simple versus advanced search</no>
<sv>Simple versus advanced search</sv>
<el>Simple versus advanced search</el>
<uk>Simple versus advanced search</uk>
<ja>Simple versus advanced search</ja>
<bg>Simple versus advanced search</bg>
<hr>Simple versus advanced search</hr>
<zh_CN>Simple versus advanced search</zh_CN>
<zh_TW>Simple versus advanced search</zh_TW>
</lang>
</a></h3>
<lang>
<en>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</en>
<bg>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</bg>
<cs>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</cs>
<de>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</de>
<el>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</el>
<fr>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</fr>
<hr>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</hr>
<zh_CN>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</zh_CN>
<zh_TW>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</zh_TW>
<it>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</it>
<ja>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</ja>
<no>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</no>
<pl>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</pl>
<pt>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</pt>
<ru>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</ru>
<sk>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</sk>
<sv>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</sv>
<uk>
<p>The default search mode is <strong>simple search</strong> that
basically provides you with one input box where you can type your
query, followed by a possibility to choose one of the common indexes
to search within.  You would usually simply type the keywords you are
interested in and hit return.  For example, if you are interested in
documents on <em>standard model</em> that are written by (or mention)
<em>Ellis</em>, you would type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis standard model">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>
and on the search results page you could further add/remove keywords
to get more precisely at what you are looking for, as is mentioned <a
href="#boolean">below</a>.
</uk>
<es>
<p>El modo de búsqueda por defecto es la <strong>búsqueda
simple</strong> que permite, en términos generales, escribir una
consulta en el campo de texto, acompañado de la posibilidad de
seleccionar uno de los índices comunes sobre los que efectuar la
consulta.  Se introducen las palabras clave a buscar y se acciona la
consulta mediante la tecla de retorno (o intro).  Por ejemplo, si
interesa recuperar documentos sobre <em>modelos estándar</em> que han
sido escritos por (o que mencionan a) <em>Ellis</em>, debemos
escribir:

     <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis modelos estandar">
    <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
    <input class="formbutton" type="submit" name="action" value="BUSCAR">
    </blockquote>
    </form>

y en la página de resultados de la búsqueda podemos volver a añadir o
quitar palabras clave para obtener mayor precisión en los resultados,
tal y como se especifica en más <A href="#boolean">adelante</A>.
</es>
<ca>
<p>La cerca per defecte és la <strong>cerca simple</strong>, que
fonamentalment permet escriure la consulta dins un camp de text,
seguit de la possibilitat d'escollir un dels índexs comuns sobre els
que realitzar la consulta.  S'introdueixen les paraules clau a buscar
i s'acciona la consulta mitjançant la tecla de retorn (intro).  Per
exemple, si interessa recuperar documents sobre <em>models
estàndard</em> que han estat escrits per (o que fan esment a)
<em>Ellis</em>, haurem d'escriure:

     <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size=40 type="text" name="p" value="ellis models est&agrave;ndar">
    <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

i a la pàgina dels resultats de la cerca podem tornar a afegir o
treure paraules clau per tal d'obtenir més precisió als resultats, tal
i com s'especifica més <A href="#boolean">endavant</A>.
</ca>
</lang>

<lang>
<en>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</en>
<bg>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</bg>
<cs>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</cs>
<de>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</de>
<el>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</el>
<fr>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</fr>
<hr>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</hr>
<zh_CN>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</zh_CN>
<zh_TW>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</zh_TW>
<it>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</it>
<ja>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</ja>
<no>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</no>
<pl>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</pl>
<pt>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</pt>
<ru>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</ru>
<sk>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</sk>
<sv>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</sv>
<uk>
<p>The <strong>advanced search</strong> interface provides you with
explicit tools to play with: you can change the matching type from the
default word matching to phrase searching or the regular matching; you
can use boolean queries in several indexes, etc.  For example, to find
all the documents written by <em>Ellis, J</em> spelled exactly that
way that contain either of the words <em>muon</em> or
<em>neutrino</em> in the title and that were published in
<em>2001</em>, you would type:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e" selected>Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p1" size="16" value="Ellis, J"></td>
            <td class="searchboxbody"><select name="f1"><option value="">any field<option value="abstract">abstract<option value="author" selected>author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
    <option value="a">All of the words:
    <option value="o" selected>Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p2" size="16" value="muon neutrino"></td>
            <td class="searchboxbody"><select name="f2"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title" selected>title<option value="year">year</select></td>

            <td class="searchboxbody">
    <select name="op2">
    <option value="a">AND
    <option value="o">OR
    <option value="n">AND NOT
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
    <option value="a">All of the words:
    <option value="o">Any of the words:
    <option value="e">Exact phrase:
    <option value="p">Partial phrase:
    <option value="r">Regular expression:
    </select>
    <input type="text" name="p3" size="16" value="2001"></td>
            <td class="searchboxbody"><select name="f3"><option value="">any field<option value="abstract">abstract<option value="author">author<option value="collection">collection<option value="division">division<option value="experiment">experiment<option value="fulltext">fulltext<option value="keyword">keyword<option value="reference">reference<option value="reportnumber">report number<option value="subject">subject<option value="title">title<option value="year" selected>year</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="SEARCH"><input class="formbutton" type="submit" name="action" value="Browse">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Note that Simple Search can provide you basically the same
functionality, if you make use of special syntax that is explained in
the text below.  The simple-versus-advanced does not refer to the
functionality that is being provided but rather to the amount of
parametrization you can "tweak".  We conform to the common
use of the simple/advanced terms as found in other search engines.

<p>Much of what follows will deal with a question on "how a power user
would use the simple search interface".  Recall that you can always go
to the Advanced Search for more query assistance.
</uk>
<es>
<p>El interfaz de <strong>búsqueda avanzada</strong> ofrece
herramientas específicas con las que configurar la búsqueda: podemos
cambiar el tipo de búsqueda por defecto (de alguna palabra a todas,
buscar por frase exacta, por expresión regular, etc.); nos permite
utilizar las expresiones booleanas combinando varios índices, etc.
Por ejemplo, para recuperar todos los documentos escritos por
EM>Ellis, J</em> -transcrito exactamente de ese modo- y también las
palabras <em>muons</em> o <em>neutrino</em> en el título de la
publicación y <em>2001</em> en el año, escribiremos lo siguiente:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">Todas las palabras:
    <option value="o">Ninguna de las palabras:
    <option value="e" selected>Frase exacta:
    <option value="p">Parte de la frase:
    <option value="r">Expresión regular:
    </select>
    <input type="text" name="p1" SIZE="16" value="Ellis, J"></td>
<td class="searchboxbody"><select name="f1"><option value="">cualquier campo<option value="abstract">resumen<option value="author" selected>autor<option value="colección">colecci&oacute;n<option value="division">divisi&oacute;n<option value="experimento">experimento<option value="fulltext">texto completo<option value="keyword">palabra clave<option value="reference">cita<option value="reportnumber">report number<option value="subject">palabra clave<option value="title">t&iacute;tulo<option value="year">a&ntilde;o</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">Y
    <option value="o">O
    <option value="n">Y NO
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
   <option value="a">Todas las palabras:
    <option value="o">Ninguna de las palabras:
    <option value="e" selected>Frase exacta:
    <option value="p">Parte de la frase:
    <option value="r">Expresión regular:
    </select>
    <input type="text" name="p2" SIZE="16" value="muon neutrino"></td>
         <td class="searchboxbody"><select name="f1"><option value="">cualquier campo<option value="abstract">resumen<option value="author" selected>autor<option value="colección">colecci&oacute;n<option value="division">divisi&oacute;n<option value="experimento">experimento<option value="fulltext">texto completo<option value="keyword">palabra clave<option value="reference">cita<option value="reportnumber">report number<option value="subject">palabra clave<option value="title">t&iacute;tulo<option value="year">a&ntilde;o</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">Y
    <option value="o">O
    <option value="n">Y NO
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
   <option value="a">Todas las palabras:
    <option value="o">Ninguna de las palabras:
    <option value="e" selected>Frase exacta:
    <option value="p">Parte de la frase:
   <option value="r">Expresión regular:
    </select>
    <input type="text" name="p3" SIZE="16" value="2001"></td>
         <td class="searchboxbody"><select name="f1"><option value="">cualquier campo<option value="abstract">resumen<option value="author" selected>autor<option value="colección">colecci&oacute;n<option value="division">divisi&oacute;n<option value="experimento">experimento<option value="fulltext">texto completo<option value="keyword">palabra clave<option value="reference">cita<option value="reportnumber">report number<option value="subject">palabra clave<option value="title">t&iacute;tulo<option value="year">a&ntilde;o</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="BUSCAR"><input class="formbutton" type="submit" name="action" value="Explorar">&nbsp;</td>
          </tr>
         </TBODY>
        </table>
        </form>
</blockquote>

<p>Obsérvese que si utilizamos una sintaxis especial, la Búsqueda
Simple ofrece prácticamente la misma funcionalidad que la avanzada,
tal y como se indica en las siguientes secciones de esta guía.  Este
apartado de búsqueda simple-versus-avanzada no se refiere tanto a las
funcionalidades disponibles, sino a la forma de búsqueda que podemos
configurar mediante pequeñas modificaciones. El sistema se ha adaptado
al uso común de los términos de simple/avanzado que podemos encontrar
en otros motores de búsqueda.

<p>En realidad, gran parte de la explicación que sigue a continuación,
responde a la cuestión de "cómo un usuario avanzado puede utilizar la
interficie de búsqueda simple".  Recordamos que en cualquier momento
es posible recurrir a la ayuda de la búsqueda avanzada para conseguir
más asistencia.
</es>

<ca>
<p>La interficie de <strong>cerca avançada</strong> ofereix eines
específiques amb les que configurar la cerca: podem canviar el tipus
de cerca a realitzar per defecte (d'alguna paraula a totes les
paraules, cerca per frase exacta, per expressió regular, etc.); ens
permet emprar la combinació booleana a nombrosos índexs, etc.  Per
exemple, per localitzar tots els documents escrits per EM>Ellis,
J</em> -transcrit exactament d'aquesta manera- i també les paraules
<em>muon</em> o <em>neutrino</em> al títol de la publicació i
<em>2001</em> a l'any, escriurem:

<blockquote>
<form action="<WEBURL>/search" method="get">
    <input type="hidden" name="cc" value="Atlantis Institute of Science">
    <input type="hidden" name="as" value="1">
        <table>
         <tbody>
          <tr valign="bottom">
            <td>
    <select name="m1">
    <option value="a">Totes les paraules:
    <option value="o">Cap de les paraules:
    <option value="e" selected>Frase exacta:
    <option value="p">Part de la frase:
    <option value="r">Expressió regular:
    </select>
    <input type="text" name="p1" SIZE="16" value="Ellis, J"></td>
           <td class="searchboxbody"><select name="f1"><option value="">qualsevol camp<option value="abstract">resum<option value="author" selected>autor<option value="coleccion">col&middot;lecci&oacute;<option value="division">divisi&oacute;<option value="experimento">experiment<option value="fulltext">text complet<option value="keyword">paraula clau<option value="reference">cita<option value="reportnumber">report number<option value="subject">paraula clau<option value="title">t&iacute;tol<option value="year">any</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">I
    <option value="o">O
    <option value="n">I NO
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m2">
   <option value="a">Totes les paraules:
    <option value="o">Cap de les paraules:
    <option value="e" selected>Frase exacta:
    <option value="p">Part de la frase:
    <option value="r">Expressió regular:
    </select>
    <input type="text" name="p2" SIZE="16" value="muon neutrino"></td>
         <td class="searchboxbody"><select name="f1"><option value="">qualsevol camp<option value="abstract">resum<option value="author" selected>autor<option value="coleccion">col&middot;lecci&oacute;<option value="division">divisi&oacute;<option value="experimento">experiment<option value="fulltext">text complet<option value="keyword">paraula clau<option value="reference">cita<option value="reportnumber">report number<option value="subject">paraula clau<option value="title">t&iacute;tol<option value="year">any</select></td>

            <td class="searchboxbody">
    <select name="op1">
    <option value="a">I
    <option value="o">O
    <option value="n">I NO
    </select>
    </td>
          </tr>
          <tr valign="bottom">
            <td class="searchboxbody">

    <select name="m3">
 <option value="a">Totes les paraules:
    <option value="o">Cap de les paraules:
    <option value="e" selected>Frase exacta:
    <option value="p">Part de la frase:
    <option value="r">Expressió regular:
    </select>
    <input type="text" name="p3" SIZE="16" value="2001"></td>
         <td class="searchboxbody"><select name="f1"><option value="">qualsevol camp<option value="abstract">resumn<option value="author" selected>autor<option value="colección">col&middot;lecci&oacute;<option value="division">divisi&oacute;<option value="experimento">experiment<option value="fulltext">text complet<option value="keyword">paraula clau<option value="reference">cita<option value="reportnumber">report number<option value="subject">paraula clau<option value="title">t&iacute;tol<option value="year">any</select></td>

            <td class="searchboxbody"><input class="formbutton" type="submit" name="action" value="Buscar"><input class="formbutton" type="submit" name="action" value="Explorar">&nbsp;</td>
          </tr>
         </tbody>
        </table>
        </form>
</blockquote>

<p>Observis que si fem servir una sintaxi especial, la Cerca Simple
ofereix pràcticament la mateixa funcionalitat que l'avançada, tal i
com s'explica a les següents seccions d'aquesta guia.  Aquest apartat
de cerca simple-versus-avançada no es refereix tant a les
funcionalitats disponibles, com a la forma de cerca que podem
configurar mitjançant petites modificacions.  El sistema s'ha adaptat
a l'ús comú dels termes simple/avançat que podem trobar a altres
motors de cerca.

<p>En realitat, gran part de l'explicació que segueix a continuació,
respòn a la qüestió de "com un usuari avançat pot utilitzar la
interficie de cerca simple".  Recordem que en qualsevol moment és
posible recòrrer a l'ajuda de la cerca avanzada per aconseguir més
assistència.
</ca>
</lang>

<h3><a name="guidance">
<lang>
<en>Search guidance</en>
<fr>Search guidance</fr>
<de>Grundlagen</de>
<es>Búsqueda guiada</es>
<ca>Cerca guiada</ca>
<pl>Search guidance</pl>
<pt>Search guidance</pt>
<it>Search guidance</it>
<ru>Search guidance</ru>
<sk>Search guidance</sk>
<cs>Search guidance</cs>
<no>Search guidance</no>
<sv>Search guidance</sv>
<el>Search guidance</el>
<uk>Search guidance</uk>
<ja>Search guidance</ja>
<bg>Search guidance</bg>
<hr>Search guidance</hr>
<zh_CN>Search guidance</zh_CN>
<zh_TW>Search guidance</zh_TW>
</lang>
</a></h3>

<lang>
<en>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</en>
<bg>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</bg>
<cs>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</cs>
<de>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</de>
<el>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</el>
<fr>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</fr>
<hr>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</hr>
<zh_CN>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</zh_CN>
<zh_TW>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</zh_TW>
<it>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</it>
<ja>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</ja>
<no>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</no>
<pl>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</pl>
<pt>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</pt>
<ru>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</ru>
<sk>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</sk>
<sv>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</sv>
<uk>
<p>After you submit your query, the search engine will analyze it and
will try to always guide you in case no exact match could be found.
For example, it would print you a list of closest indexed terms in
case of spelling troubles:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

<p>Alternative choices will be printed in red.  The search engine
will similarly warn you when your search terms could not be
found, or when they could but your boolean query couldn't be met.  The
search engine will also silently try to search for alternative forms
(e.g. remove punctuation), etc.
<p>Thanks to multiple search stages and the guidance provided at each
stage, it is usually sufficient to simple type what you are looking
for and see what the system says in return.  If you aren't satisfied,
you would then add/remove words from your query until the satisfactory
reply.
</uk>

<es>
<p> Gracias al sistema de búsqueda en múltiples etapas y a la ayuda
que se proporciona en cada una de estas etapas, por lo general resulta
suficiente escribir la palabra de búsqueda y revisar los resultados
qué nos devuelve el sistema.  Si los resultados no son pertinentes, o
son excesivos o insuficientes, es posible añadir o quitar palabras de
la consulta hasta conseguir resultados más satisfactorios.

<p> Después de recibir una consulta, el motor de búsqueda la analiza
y, en caso de no localizar ninguna coincidencia en la base de datos,
el sistema tratará de guiar al usuario.  Un ejemplo de ello son las
listas de los términos indexados que se encuentran más cercanos al
término introducido, en caso de que se produzacan errores ortográficos
o de transcripción al efectuar la consulta:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
    <input class="formbutton" type="submit" name="action" value="BUSCAR">
    </blockquote>
    </form>

<p>Las opciones alternativas se muestran en rojo.  El motor de
búsqueda avisa de forma similar cuando detecta que los términos de
búsqueda no se encuentran, o cuando detecta que sí que existen pero la
fórmula de consulta booleana utilizada no puede localizarlos.  Así
mismo, el motor de búsqueda también realiza de forma oculta acciones
alternativas para mejorar los resultados, como por ejemplo eliminar
puntuación, etc.
</es>

<ca>
<p> Gràcies al sistema de cerca en múltiples etapes i a l'ajuda que es
va proporcionant a cadascuna d'aquestes etapes, pel general resulta
suficient teclejar l'objetcte de cerca i observar que ens retorna el
sistema. Si no quedem satisfets, podem afegir/treure paraules de la
nostra consulta fins aconseguir uns resultats satisfactoris.

<p> Després de rebre una consulta, el motor de cerca l'analizarà i
tractarà sempre de guiar a l'usuari en cas de que no localitzi cap
coincidència a la base de dades.  Un exemple d'això son les llistes

dels termes indexats que es troben més propers al terme introduït a la
consulta en cas que no es trobin coincidències per errors ortogràfics
o de transcripció:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="elllis muon">
    <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
    <input class="formbutton" type="submit" name="action" value="CERCAR">
    </blockquote>
    </form>

<p>Les opcions alternatives es mostren en vermell.  El motor de cerca
avisa de forma similar quan detecta que els termes de cerca no es
troben, o quan detecta que si que existeixen però la fórmula de
consulta booleana emprada no aconsegueix localitzar-los.  Així mateix,
el motor de cerca també realitza de forma oculta accions alternatives
per a millorar els resultat,s com, per exemple, eliminar puntuació,
etc.
</ca>
</lang>

<h3><a name="words-vs-phrases">
<lang>
<en>Searching for words versus phrases</en>
<fr>Searching for words versus phrases</fr>
<de>Suche nach Wörtern und Wortgruppen</de>
<es>Búsqueda por palabras versus búsqueda por frases</es>
<ca>Cerca per paraules versus cerca per frases</ca>
<pl>Searching for words versus phrases</pl>
<pt>Searching for words versus phrases</pt>
<it>Searching for words versus phrases</it>
<ru>Searching for words versus phrases</ru>
<sk>Searching for words versus phrases</sk>
<cs>Searching for words versus phrases</cs>
<no>Searching for words versus phrases</no>
<sv>Searching for words versus phrases</sv>
<el>Searching for words versus phrases</el>
<uk>Searching for words versus phrases</uk>
<ja>Searching for words versus phrases</ja>
<bg>Searching for words versus phrases</bg>
<hr>Searching for words versus phrases</hr>
<zh_CN>Searching for words versus phrases</zh_CN>
<zh_TW>Searching for words versus phrases</zh_TW>
</lang>
</a></h3>

<lang>
<en>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</en>
<bg>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</bg>
<cs>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</cs>
<de>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</de>
<el>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</el>
<fr>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</fr>
<hr>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</hr>
<zh_CN>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</zh_CN>
<zh_TW>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</zh_TW>
<it>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</it>
<ja>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</ja>
<no>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</no>
<pl>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</pl>
<pt>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</pt>
<ru>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</ru>
<sk>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</sk>
<sv>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</sv>
<uk>
<p>The default search mode is a <strong>search for words</strong>.  This
means that any whitespace you type is not significant, but is rather
interpreted to mean "add an automatic boolean AND between words", like
Google does.  For example, to find all records that contain both the
word <em>ellis</em> and the word <em>muon</em> anywhere in the record,
type:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">any field<option>title<option>author</select>
    <input class="formbutton" type="submit" name="action" value="SEARCH">
    </blockquote>
    </form>

The whitespace would be significant if you include it within quotes.
There are two phrase searching modes:

<ol>

<li>The double quotes instruct the search engine to <strong>search for
    exact phrase</strong>.  This phrase search mode will match if and
    only if the given metadata field is exactly equal to the input
    pattern.  For example, to find all documents written by <em>Ellis,
    J</em> spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<li>The single quotes instruct the search engine to <strong>search for
    partial phrase</strong>.  Unlike the exact phrase search, this
    mode allows for an extra text appearing before/after given
    pattern.  This is somewhat similar to the "phrase search mode"
    common on Google and other fulltext engines that search for phrase
    expressions inside Web pages.  For example, to find all the titles
    containing the expression <em>muon decay</em> regardless of the
    position of the expression in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    Now you see how to search for an author spelled sometimes as
    <em>Ellis, J</em> and sometimes as <em>Ellis, Jonathan
    Richard</em> (and other authors, such as <em>De Lellis, Jim</em>)
    at the same time:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    (See also our specific <a href="#howto-search-for-author">author
    searching tips</a>.)

</ol>

<p>The difference between exact and partial phrase searching modes may
not be obvious upon first look.  While the latter is more similar to
what ``phrase search'' usually means in the context of web page search
engines, the former one is usually an order of magnitude faster if you
know the precise values you are looking for.

<p>Another interesting searching mode besides the word and phrase
searches is the <strong>regular expression search</strong>, introduced
by slashes instead of quotes.  For example, the above partial phrase
query <code>'muon decay'</code> is fully equivalent to the regular
expression query <code>/muon decay/</code>.  The regular expression
syntax is very powerful and permits you to construct very complex
queries.  For more information, please consult the <a
href="#regexp">regular expression</a> section of this guide.
</uk>
<es>
<p>El modo de búsqueda por defecto es la <strong>búsqueda por
palabras</strong>.  Ello significa que se ignoran los espacios en
blanco, pero también que el motor de búsqueda lo interpreta por
defecto como "añade automáticamente una Y booleana entre las palabras
introducidas", del mismo modo que hace Google.  Por ejemplo, para
recuperar todos los registros que contengan tanto la palabra
<em>ellis</em> como <em>muon</em> en cualquier parte del
registro, debemos escribir:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
    <input class="formbutton" type="submit" name="action" value="BUSCAR">
    </blockquote>
    </form>

Si queremos que el espacio en blanco sea significativo, debemos
escribir la sentencia entrecomillada.  Existen dos formas de búsqueda
por frases:

<ol>

<li>La introducción de dobles comillas le indica al motor de búsqueda
    <strong>buscar la frase exacta</strong>.  Esta forma de búsqueda
    por frase devolverá resultados sólo si los campos de metadatos
    localizados son exactamente iguales al patrón solicitado.  Por
    ejemplo, para recuperar todos los documentos escritos por
    <em>Ellis, J</em> escrito exactamente de ese modo, debemos
    escribir:

      <form action="<WEBURL>/search" method="get">
<blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<OPTION selected>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

<li>La introducción de comillas simples le indica al motor de búsqueda
    <strong>buscar alguna parte de la frase</strong>.  A diferencia de
    la búsqueda de frase exacta este método permite que exista texto
    antes/después del patrón solicitado.  Sería algo similar al método
    de "búsqueda por frase" que utilizan Google y otros motores de
    búsqueda cuando buscan expresiones dentro del texto completo de
    las páginas web.  Por ejemplo, para localizar todos los títulos
    que contengan la expresión <em>muon decay</em> independientemente
    de la posición que ocupe la expresión en el título, escribiremos:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">cualquier campo<option selected>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

    Observemos como se introduciría la búsqueda de un autor que a
    veces aparece escrito como <em>Ellis, J</em> y otras como
    <em>Ellis, Jonathan Richard</em> (incluyendo otros autores, como
    <em>De Lellis, Jim</em>) en una misma acción de búsqueda:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<OPTION selected>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

    (Para más información, se recomienda ver también la búsqueda
    específica por <a href="#howto-search-for-author">autor</a>.)

</ol>

<p>La diferencia entre buscar por frase exacta o buscar en parte de la
frase puede parecer poco obvia en un primer momento. Sin embargo,
mientras que la búsqueda en parte de la frase se asemeja a la búsqueda
por frase que suele utilizarse en el contexto de los buscadores web,
el uso de la búsqueda por frase exacta resulta mucho más efectiva y
rápida cuanto más se conocen y especifican los valores a recuperar.


<p>Otro interesante modo de búsqueda aparte de la búsqueda por palabra
o por frase es el uso de la <strong>expresión regular de
búsqueda</strong>, que se efectúa a partir del uso de parentesis en
lugar de entrecomillado.  Por ejemplo, la búsqueda anterior según el
modo de en parte de la frase <code>'muon decay'</code> es equivalente a
la expresión regular<code>/muon decay/</code>.  La sintaxis de las
expresiones regulares es muy potente, y permite construir búsquedas
muy complejas.  Para obtener más información, recomendamos la consulta
de la sección <A href="#regexp">expresión regular</A> de esta guia.
</es>

<ca>
<p>El mode de cerca per defecte es la <strong>cerca per
paraules</strong>.  Aquest mode implica s'ignorian els espais en
blanc, però també que el motor de cerca els interpreti per defecte com
a "afegeis automàticament una I booleana entre les paraules
introduïdes", de la mateixa forma que fa Google.  Per exemple, per
recuperar tots els registres que continguin tant la paraula
<em>ellis</em> com <em>muon</em> a qualsevol part del registre,
haurem d'escriure:

    <form action="<WEBURL>/search" method="get">
    <blockquote>
    <input size="40" type="text" name="p" value="ellis muon">
    <select name="f"><option value="">cualquier campo<option>t&iacute;tol<option>autor</select>
    <input class="formbutton" type="submit" name="action" value="CERCA">
    </blockquote>
    </form>

Si volem que l'espai en blanc sigui significatiu, hem d'escriure la
sentència entre cometes.  Existeixen dues formes de cerca per frase:

<OL>

<li>La introducció de cometes dobles indica al motor de cerca
<strong>cerca la frase exacta</strong>. Aquesta forma de cerca per
frase retornara resultats només en el cas que els camps de metadades
localitzats siguin exactament igual al patró sol·licitat. Per exemple,
per recuperar tots els documents escrits per <em>Ellis, J</em> escrit
exactament d'aquesta manera, hem d'escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Ellis, J&quot;">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<OPTION selected>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>

      </form>

<li>La introducció de comentes simples indica al motor de cerca
l'acció de <strong>cercar a alguna part de la frase</strong>.  A
diferència de la cerca per frase exacta aquest mètode permet que
existeixi text abans/desprès del patró sol•licitat.  Aquest métode és
similar al de "cerca per frase" que utilitzen Google i altres motors
de cerca quan cerquen expressions dins del text complet de les pàgines
web.  Per exemple, per localitzar tots els títols que continguin
l'expressió <em>muon decay</em> independentment de la posició que
aquesta ocupi dins el títol, escriurem:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'muon decay'">
      <select name="f"><option value="">qualsevol camp<OPTION selected>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

    Observem como s’introduiria la cerca d’un autor que de vegades
    apareix escrit com <em>Ellis, J</em> y altres com <em>Ellis,
    Jonathan Richard</em> (incloent altres autors com <em>De Lellis,
    Jim</em>) en una mateixa acció de cerca:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="'Ellis, J'">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<OPTION selected>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

    (Per més informació, es recomana veure també la cerca específica
    per <A HREF="#howto-search-for-author">autor</A>.)

</OL>

<p>La diferència entre cercar per frase exacta o cercar per part de la
frase Pot semblar poc evident a primera vista.  Ara bé, mentre que la
cerca per part de la frase s’equipara a la cerca per frase que
acostuma a aplicar-se dins el context dels cercadors web, l’ús de la
cerca per frase exacta resulta molt més efectiva i ràpida com més es
coneguin i especifiquin els valors a recuperar.


<p>Un altra interessant forma de cerca apart de la cerca per paraula o
frase, és l’ús de la <strong>expressió regular de cerca</strong>, que
es realitza a partir del ús de barres inclinades en lloc de cometes.
Per exemple, la cerca anterior segons el mode de ‘part de la frase’ de
l’expressió <code>'muon decay'</code> és equivalent a l’expressió
regular<code>/muon decay/</code>.  La sintaxi de les expressions
regulars és molt potent, i permet construir cerques molt complexes.
Per obtenir més informació, recomanem la consulta de la secció <A
href="#regexp">expressió regular</A> d’aquesta guia.
</ca>
</lang>

<h3><a name="boolean">
<lang>
<en>Boolean queries</en>
<fr>Boolean queries</fr>
<de>Boolsche Suche</de>
<es>Búsquedas booleanas</es>
<ca>Cerques booleanes</ca>
<pl>Boolean queries</pl>
<pt>Boolean queries</pt>
<it>Boolean queries</it>
<ru>Boolean queries</ru>
<sk>Boolean queries</sk>
<cs>Boolean queries</cs>
<no>Boolean queries</no>
<sv>Boolean queries</sv>
<el>Boolean queries</el>
<uk>Boolean queries</uk>
<ja>Boolean queries</ja>
<bg>Boolean queries</bg>
<hr>Boolean queries</hr>
<zh_CN>Boolean queries</zh_CN>
<zh_TW>Boolean queries</zh_TW>
</lang>
</a></h3>

<lang>
<en>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</en>
<bg>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</bg>
<cs>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</cs>
<de>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</de>
<el>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</el>
<fr>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</fr>
<hr>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</hr>
<zh_CN>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</zh_CN>
<zh_TW>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</zh_TW>
<it>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</it>
<ja>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</ja>
<no>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</no>
<pl>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</pl>
<pt>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</pt>
<ru>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</ru>
<sk>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</sk>
<sv>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</sv>
<uk>
We have already seen how whitespace adds a silent boolean AND in the
search for words.  The other boolean operators include:

<blockquote>
<table border="1" cellpadding=10>
<tr>
<td rowspan=3 align=center>
<strong>+<br>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  matches all records that contain both the word
  <em>ellis</em> and the the word <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>-<br>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
matches all records that contain the word
                        <em>ellis</em> but that do not contain the word
                        <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
<tr>
<td rowspan=2 align=center>
<strong>|<br>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
matches all records that contain at least one
                       of the words
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ditto, syntactic sugar
</td>
</tr>
</table>
</blockquote>
</uk>
<es>
Ya hemos visto como la inclusión de un espacio en blanco es
equivalente a la adición de un operador booleano en la búsqueda por
palabras. El resto de operadores booleanos son:
<blockquote>
<table BORDER="1" cellpadding=10>
<tr>
<TD rowspan=3 align=center>
<strong>+<BR>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  recupera todos los registros que contengan ambas palabras:
  <em>ellis</em> y la palabra <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ídem, "syntactic sugar"(*ver nota)
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ídem, "syntactic sugar"
</td>
</tr>
<tr>
<TD rowspan=2 align=center>
<strong>-<BR>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
recupera todos los registros que contengan la palabra
                        <em>ellis</em> pero que no contenga la palabra <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ditto, "syntactic sugar"
</td>
</tr>
<tr>
<TD rowspan=2 align=center>
<strong>|<BR>OR</strong>
</td>
<td>
   <code>ellis |acelerador</code>
</td>
<td>
recupera todos los registros que contengan al menos, una de las dos palabras
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ídem, "syntactic sugar"
</td>
</tr>
<tr>
<td colspan="2"><font size=1>(*)Nota de la traducción española: syntactic sugar es una espresión
utilizada en inglés para describir "otra forma similar de llamar a una función"</font></td>
</tr>
</table>
</blockquote>
</es>

<ca>
Hem vist com la inclusió d’un espai en blanc és equivalent a l’adició
d’un operador booleà a la cerca per paraules.  La resta d’operadors
booleans són:
<blockquote>
<table BORDER="1" cellpadding=10>
<tr>
<TD rowspan=3 align=center>
<strong>+<BR>AND</strong>
</td>
<td>
   <code>ellis +muon</code>
</td>
<td>
  Recupera tots els registres que contenen ambdues paraules:
  <em>ellis</em> i la paraula <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis muon</code>
</td>
<td>
 ídem, "syntactic sugar" (*veure nota)
</td>
</tr>
<tr>
<td>
   <code>ellis and muon</code>
</td>
<td>
 ídem, "syntactic sugar"
</td>
</tr>
<tr>
<TD rowspan=2 align=center>
<strong>-<BR>NOT</strong>
</td>
<td>
 <code>ellis -muon</code>
</td>
<td>
recupera tots els registres que contenen la paraula <em>ellis</em> però que no contenen la paraula <em>muon</em>
</td>
</tr>
<tr>
<td>
   <code>ellis not muon</code>
</td>
<td>
ídem, "syntactic sugar"
</td>
</tr>
<tr>
<TD rowspan=2 align=center>
<strong>|<BR>OR</strong>
</td>
<td>
   <code>ellis |muon</code>
</td>
<td>
recupera tots els registres que contenen, com a mínim, una de les dues paraules
</td>
</tr>
<tr>
<td>
  <code>ellis or muon</code>
</td>
<td>
ídem, "syntactic sugar"
</td>
</tr>
<tr>
<td colspan="2"><sup>(*)</sup><font size=1>Nota de la traducció catalana: syntactic sugar es una espressió
emprada en anglès per a descriure "altre forma similar de cridar una funció"</font></td>
</tr>
</table>
</blockquote>
</ca>
</lang>

<lang>
<en>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</en>
<bg>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</bg>
<cs>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</cs>
<de>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</de>
<el>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</el>
<fr>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</fr>
<hr>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</hr>
<zh_CN>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</zh_CN>
<zh_TW>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</zh_TW>
<it>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</it>
<ja>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</ja>
<no>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</no>
<pl>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</pl>
<pt>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</pt>
<ru>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</ru>
<sk>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</sk>
<sv>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</sv>
<uk>
<p>Logical operations are automatically chained from left to right.
For example, if you want to search for documents written by Ellis on
muons or kaons, write:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which looks for <code>(muon or kaon) and ellis</code>.  Note that this
gives different results from:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

which would search for <code>(ellis and muon) or kaon</code>.

<p>The left-to-right chaining behaviour permits you to easily refine
your search by adding/removing words with and/not or +/- operators.
For example, to exclude the documents on decay from the above search,
append <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

to get a refined list.  Keep adding/removing terms until you are
satisfied.
</uk>
<es>
<p>Los operadores lógicos se disponen de forma automática de izquierda
a derecha.  Logical operations are automatically chained from left to
right.  Por ejemplo, si queremos buscar documentos escritos por Ellis
sobre muon o kaon, escribiremos:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

ello nos realizará una búsqueda equivalente a <code>(muon O
kaon) Y ellis</code>.  Nótese también que se obtienen
resultados diferentes si introducimos

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

que si introducimos <code>(ellis AND muon) OR kaon</code>.

<p>La disposición de los elementos de izquierda a derecha permite
refinar fácilmente una búsqueda añadiendo o quitando palabras
utilizanto los operadores AND/NOT +/-.

Por ejemplo, para excluir los documentos sobre desintegración en la
búsqueda anterior, sólo hay que añadir <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

y con ello obtendremos una lista más filtrada.  Se pueden añadir o
quitar tantos elementos como sea conveniente hasta conseguir mayor
precisión en la búsqueda.
</es>


<ca>

<p>Els operadors lògics es disposen de forma automàtica d’esquerre
a dreta.  Per exemple, si es volen recuperar documents escrits per Ellis
sobre muon o kaon, escriurem:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

es realitzarà una cerca equivalent a <code>(muon OR kaon)
AND ellis</code>.  Notis també que s’obtenen resultats diferents si
s’introdueix

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ellis and muon or kaon">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

que si s’introdueix <code>(ellis AND muon) OR kaon</code>.

<p>La disposició dels elements d’esquerre a dreta permet refinar
fàcilment una cerca afegint o traient paraules utilitzant els
operadors AND/NOT +/-.

Per exemple, per excloure els documents sobre desintegració a la cerca
anterior, només cal afegir <code>-decay</code>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or kaon and ellis -decay">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

Amb el que s’obtindria una llista més filtrada.  Es poden afegir o
traure tants elements com sigui convenient, fins aconseguir més
precisió a la cerca.  </ca>
</lang>

<h3><a name="punctuation">
<lang>
<en>Special characters and punctuation</en>
<fr>Special characters and punctuation</fr>
<de>Spezielle Zeichen und Notation</de>
<es>Caracteres especiales y puntuación</es>
<ca>Caracters especials i puntuació</ca>
<pl>Special characters and punctuation</pl>
<pt>Special characters and punctuation</pt>
<it>Special characters and punctuation</it>
<ru>Special characters and punctuation</ru>
<sk>Special characters and punctuation</sk>
<cs>Special characters and punctuation</cs>
<no>Special characters and punctuation</no>
<sv>Special characters and punctuation</sv>
<el>Special characters and punctuation</el>
<uk>Special characters and punctuation</uk>
<ja>Special characters and punctuation</ja>
<bg>Special characters and punctuation</bg>
<hr>Special characters and punctuation</hr>
<zh_CN>Special characters and punctuation</zh_CN>
<zh_TW>Special characters and punctuation</zh_TW>
</lang>
</a></h3>

<lang>
<en>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</en>
<bg>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</bg>
<cs>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</cs>
<de>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</de>
<el>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</el>
<fr>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</fr>
<hr>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</hr>
<zh_CN>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</zh_CN>
<zh_TW>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</zh_TW>
<it>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</it>
<ja>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</ja>
<no>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</no>
<pl>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</pl>
<pt>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</pt>
<ru>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</ru>
<sk>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</sk>
<sv>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</sv>
<uk>
<p>When indexing words, an attention is paid to index it both with and
   without punctuation, so that you should be able to search for terms
   containing special characters, such as <em>C++</em>, verbatim:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find records containing the LaTeX expression
   <code>$e^{+}e^{-}$</code> in the title, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   For example, to find document with the report number
   <em>hep-ph/0204133</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the search is case-insensitive:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="BlaCK hOlEs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</uk>
<es>
<p>Cuando se indexan las palabras, se pone especial atención en indexarlas
con y sin puntuación.  Ello hace posible la búsqueda de términos que contienen
caracteres especiales, como por ejemplo <em>C++</em>, textualmente:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<OPTION selected>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

   Por ejemplo, para recuperar registros que contengan la expresión LaTeX
   <code>$e^{+}e^{-}$</code> en el título, debemos escribir:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">cualquier campo<OPTION selected>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

   Por ejemplo, para recuperar un documento con el número de informe
   <em>hep-ph/0204133</em>, debemos escribir:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

   Nótese que esta búsqueda es sensible a las mayúsculas:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="AguJeros NEgRos">
      <select name="f"><option value="">Cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>
</es>

<ca>
<p>Quan s’indexen les paraules, es posa especial atenció en que siguin
indexades amb i sense puntuació.  Això fa possible la cerca de termes
que contenen caràcters especials, com per exemple <em>C++</em>,
textualment:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="C++">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="O'Shea">
      <select name="f"><option value="">qualsevol camp<option> t&iacute;tol<OPTION selected>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

  Per exemple, per recuperar registres que contenen l’expresió LaTeX
   <code>$e^{+}e^{-}$</code> al títol, cal escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="$e^{+}e^{-}$">
      <select name="f"><option value="">qualsevol camp<OPTION
selected> t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

   Per exemple, per recuperar un document amb número d'informe
   <em>hep-ph/0204133</em>, cal escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="hep-ph/0204133">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

  Observis que aquesta cerca és sensible a les majúscules:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="ForaTs NEgRes">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>
</ca>
</lang>

<h3><a name="unicode">
<lang>
<en>International characters</en>
<fr>International characters</fr>
<de>Internationale Zeichen</de>
<es>Caracteres internacionales</es>
<ca>Caràcters internacionals</ca>
<pl>International characters</pl>
<pt>International characters</pt>
<it>International characters</it>
<ru>International characters</ru>
<sk>International characters</sk>
<cs>International characters</cs>
<no>International characters</no>
<sv>International characters</sv>
<el>International characters</el>
<uk>International characters</uk>
<ja>International characters</ja>
<bg>International characters</bg>
<hr>International characters</hr>
<zh_CN>International characters</zh_CN>
<zh_TW>International characters</zh_TW>
</lang>
</a></h3>

<lang>
<en>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</en>
<bg>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</bg>
<cs>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</cs>
<de>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</de>
<el>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</el>
<fr>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</fr>
<hr>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</hr>
<zh_CN>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</zh_CN>
<zh_TW>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</zh_TW>
<it>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</it>
<ja>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</ja>
<no>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</no>
<pl>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</pl>
<pt>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</pt>
<ru>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</ru>
<sk>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</sk>
<sv>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</sv>
<uk>
<p>The search engine works with Unicode UTF-8 so you can type your
   query strings in any language stored in the database.  For
   example, to find the documents written by (or on) Пушкин, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that you don't have to type accents to find accented results.  For example,
   type <code>Lemaitre</code> to find papers by <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, words that include accented characters can only be retrieved by entering
      accented characters in the query.
   </td>
   </tr>
   </tbody>
   </table>
">
</uk>
<es>
<p>El motor de búsqueda se basa en el estandar Unicode UTF-8, lo que
hace posible introducir cadenas de búsqueda en cualquier idioma que se
encuentre en la base de datos.  Por ejemplo, para recuperar documentos
escritos por (o sobre) Пушкин, debemos escribir:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

  Obsérvese que no es necesario introducir acentos para conseguir registros que contienen palabras acentuadas.
  Por ejemplo, escribiremos <code>Lemaitre</code> para buscar artículos de <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<OPTION selected>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table CLASS="errorbox">
   <thead>
   <tr>
   <TH CLASS="errorboxheader">
   NOTA IMPORTANTE
   </TH>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
En estos momentos, las palabras que incluyen caracteres acentuados sólo pueden
recuperarse entrando los caracteres acentuados en la consulta.
   </td>
   </tr>
   </TBODY>
   </table>
">
</es>

<ca>
<p>El motor de cerca es basa en l’estàndard Unicode UTF-8, lo que fa
possible introduir cadenes de cerca en qualsevol llengua que es trobi
a la base de dades.  Per exemple, per recuperar documents escrits per
(o sobre) Пушкин, cal escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="пушкин">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

  Notis que no és necessari introduir accents per aconseguir registres
que contenen paraules accentuades.  Per exemple, escriurem <code>Lemaitre</code> para recuperar articles de <em>Lemaître</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Lemaitre">
      <select name="f"><option value="">qualsevol camp<option> t&iacute;tol<OPTION selected>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table CLASS="errorbox">
   <thead>
   <tr>
   <TH CLASS="errorboxheader">
   NOTA IMPORTANT
   </TH>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
En aquests moments, les paraules que inclouen caràcters accentuats només es poden
recuperar entrant els caràcters accentuats a la consulta.
   </td>
   </tr>
   </TBODY>
   </table>
">
</ca>
</lang>

<h3><a name="wildcard">
<lang>
<en>Word truncation/stemming</en>
<fr>Word truncation/stemming</fr>
<de>Trunkierung</de>
<es>Truncamientos y búsquedas por raíz</es>
<ca>Truncaments i cerques per arrel</ca>
<pl>Word truncation/stemming</pl>
<pt>Word truncation/stemming</pt>
<it>Word truncation/stemming</it>
<ru>Word truncation/stemming</ru>
<sk>Word truncation/stemming</sk>
<cs>Word truncation/stemming</cs>
<no>Word truncation/stemming</no>
<sv>Word truncation/stemming</sv>
<el>Word truncation/stemming</el>
<uk>Word truncation/stemming</uk>
<ja>Word truncation/stemming</ja>
<bg>Word truncation/stemming</bg>
<hr>Word truncation/stemming</hr>
<zh_CN>Word truncation/stemming</zh_CN>
<zh_TW>Word truncation/stemming</zh_TW>
</lang>
</a></h3>

<lang>
<en>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</en>
<bg>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</bg>
<cs>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</cs>
<de>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</de>
<el>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</el>
<fr>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</fr>
<hr>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</hr>
<zh_CN>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</zh_CN>
<zh_TW>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</zh_TW>
<it>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</it>
<ja>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</ja>
<no>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</no>
<pl>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</pl>
<pt>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</pt>
<ru>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</ru>
<sk>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</sk>
<sv>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</sv>
<uk>
<p>The word truncation is supported via asterisk (*) wildcard
   character.  The wildcard instructs the search engine to match any
   number of characters in that place.  For example, to find records
   that contain words <em>muon</em>, <em>muons</em>, <em>muonic</em>
   etc, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard query works both in prefix and infix position.  For
   example, to get all the words that start by <em>CERN-TH</em> and
   end by <em>31</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the wildcard will be ignored if you try to apply it to
   very short words, such as <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   The wildcard character can be used also in the phrase searching
   mode.  For example, to find all the documents whose title starts by
   "Neutrino mass", type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">any field<option selected>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Recall that we have introduced exact and partial phrase search
   modes.  Actually, a partial phrase search mode launches an exact
   search enclosed within wildcards: we could say that <code>'foo bar
   baz'</code> equals to <code>"*foo bar baz*"</code>.  Now you can
   see why the partial phrase search is slow: due to the usage of two
   asterisks in front and after the text, each and every title in the
   database has to be looked up to determine whether it matches or
   not.  (There are currently no partial phrase indexes.)
</uk>
<es>
<p>El truncamiento de una palabra se efectua a través del uso del
   asterisco (*).  Este comodín indica al motor de búsqueda que
   retorne cualquier número de carácteres en su lugar.  Por ejemplo,
   para recuperar registros que contengan las palabras
   <em>muon</em>, <em>muonic</em>, <em>muons</em>
   etc, debemos escribir:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon*">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

   La búsqueda por comodín puede utilizarse tanto en posición de
   prefijo como de sufijo. Por ejemplo, para recuperar todas las
   palabras que comiencen por <em>CERN-TH</em> y acaben con
   <em>31</em>, debemos escribir:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

   Obsérvese que el comodín se ignorará si tratamos de utilizarlo en
   palabras demasiado cortas, como por ejemplo <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

   El carácter comodín también puede usarse en el modo de búsqueda por
frase.  Por ejemplo, para recuperar todos los documentos cuyo título
comience con "Neutrino mass", debemos escribir:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">cualquier campo<OPTION selected>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

   Recordamos que en esta búsqueda hemos introducido las formas de
   'frase exacta' y 'parte de la frase'. En realidad, el modo de
   búsqueda de 'parte de la frase' lanzará una búsqueda exacta sin
   necesidad de utilizar los comodines: tanto podemos utilizar
  <code>'foo bar baz'</code> como <code>"*foo bar baz*"</code>.
   Esto ayuda a comprender porqué la búsqueda de
   palabras en una parte de la frase es lenta: debido al uso de dos
   asteriscos delante y detrás del texto, todos y cada de los
   registros de la base de datos son comprobados para determinar si se
   corresponden a la búsqueda o no. Actualmente no hay ningún índice
   de búsqueda que indexe partes de frase.
</es>

<ca>
<p>El truncament d’una paraula es realitza a través de l’ús del símbol
  asterisc (*).  Aquest comodí indica al motor de cerca que retorni
  qualsevol número de caràcters en el seu lloc.  Per exemple, per
  recuperar registres que continguin les paraules <em>astronomia</em>,
  <em>astrònoms</em>, <em>astronòmics</em> etc, cal escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="astronom*">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

   La cerca por comodí pot utilitzar-se tant en posició de prefix com
   de sufix. Per exemple, per recuperar totes les paraules que
   comencin per <em>CERN-TH</em> i acabin amb <em>31</em>, cal
   escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN-TH*31">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

   Notis que el comodí s’ignora si es tracta d’utilitzar-lo amb
   paraules massa curtes, com per exemple <em>a*</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="a*">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCARR">
      </blockquote>
      </form>

   El caràcter comodí també pot utilitzar-se al mode de cerca per
   frase.  Per exemple, per recuperar tots els documents el títol dels
   quals comenci per "Neutrino mass", cal escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="&quot;Neutrino mass*&quot;">
      <select name="f"><option value="">qualsevol camp<OPTION
selected>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

   Recordem que a aquesta cerca hem introduït les formes de 'frase
   exacta' i 'part de la frase'.  En realitat, el mode de cerca per
   'part de la frase' ens llençarà una cerca exacta sense necessitat
   de fer servir els comodins: tant podem utilitzar <code>'foo bar
   baz'</code> com <code>"*foo bar baz*"</code>.
   Això ajuda a comprendre perquè la cerca de
   paraules a una part de la frase és lenta: degut a l’ús de dos
   asteriscs davant i darrera del text, tots i cadascun dels registres
   de la base de dades es comproven per determinar si es corresponen o
   no amb la cerca introduïda.  Actualment no hi ha cap índex de cerca
   que indexi parts de frase.
</ca>
</lang>

<h3><a name="structured">
<lang>
<en>Structured metadata search</en>
<fr>Structured metadata search</fr>
<de>Strukturierte Metadatensuche</de>
<es>Structured metadata search</es>
<ca>Structured metadata search</ca>
<pl>Structured metadata search</pl>
<pt>Structured metadata search</pt>
<it>Structured metadata search</it>
<ru>Structured metadata search</ru>
<sk>Structured metadata search</sk>
<cs>Structured metadata search</cs>
<no>Structured metadata search</no>
<sv>Structured metadata search</sv>
<el>Structured metadata search</el>
<uk>Structured metadata search</uk>
<ja>Structured metadata search</ja>
<bg>Structured metadata search</bg>
<hr>Structured metadata search</hr>
<zh_CN>Structured metadata search</zh_CN>
<zh_TW>Structured metadata search</zh_TW>
</lang>
</a></h3>

<lang>
<en>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</en>
<bg>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</bg>
<cs>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</cs>
<de>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</de>
<el>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</el>
<fr>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</fr>
<hr>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</hr>
<zh_CN>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</zh_CN>
<zh_TW>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</zh_TW>
<it>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</it>
<ja>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</ja>
<no>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</no>
<pl>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</pl>
<pt>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</pt>
<ru>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</ru>
<sk>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</sk>
<sv>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</sv>
<uk>
<p>Searching within various bibliograpic fields (such as title,
   author) is supported via Google's <code>"site:"</code> like syntax.
   If a search term is preceded by a field name and a colon, then the
   term is searched for inside this field only.  For example, to find
   documents containing the word <em>ellis</em> within author index,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by <em>Ellis</em> that contain words
   like <em>muon</em>, <em>muons</em>, <em>muonic</em> within title,
   type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   To select documents written by the <em>NA60</em> experiment from
   the year <em>2001</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

    The most common fields you may want to use are
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</uk>
<es>
<p>La búsqueda realizada utilizando varios campos bibliográficos
   (tales como título, autor) se realiza a través de una sintaxis
   similar a la que utiliza Google en sus búsquedas tipo
   <code>"site:"</code>.  Si un término de búsqueda es precedido por
   un nombre de campo seguido por dos puntos este término se buscará
   únicamente en el campo especificado.  Por ejemplo, para recuperar
   documentos que contienen la palabra <em>ellis</em> dentro del
   índice de autores, debemos escribir:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

   Para recuperar documentos escritos por <em>Ellis</em> que contengan
    palabras tales como <em>muon</em>, <em>muonic</em>,
    <em>muons</em> dentro del título, debemos escribir:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

   Para recuperar documentos escritos por el experimento <em>NA60</em>
   del año <em>2001</em>, debemos escribir:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

    Los campos de uso más común son los siguientes:
    <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</es>

<ca>

<p>La cerca realitzada utilitzant diversos camps bibliogràfics (Tals
com títol, autor) es realitza a través d’una sintaxi similar a
l’emprada per Google en les Seves cerques tipus <code>"site:"</code>.
Si un terme de cerca es precedit per un nom de camp seguit per dos
punts aquest terme es cerca únicament dins el camp especificat.  Per
exemple, per recuperar documents que contenen la paraula
<em>ellis</em> dins l’índex d’autors, cal escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

   Per recuperar documents escrits per <em>Ellis</em> que continguin
    paraules tals com <em>muon</em>, <em>muonic</em>,
    <em>muons</em> dins el títol, cal escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:ellis title:muon*">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

   Per recuperar documents escrits per l’experiment <em>NA60</em> de l’any <em>2001</em>, cal escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="experiment:NA60 year:2001">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

   Els camps d’ús comú amb aquesta tècnica són:
     <code>author</code>, <code>title</code>,
    <code>reportnumber</code>, <code>abstract</code>,
    <code>keyword</code>, <code>year</code>, <code>experiment</code>,
    <code>fulltext</code>, and <code>reference</code>.
</ca>
</lang>

<h3><a name="regexp">
<lang>
<en>Regular expressions</en>
<fr>Regular expressions</fr>
<de>Regular expressions</de>
<es>Expresiones regulares</es>
<ca>Expressions regulars</ca>
<pl>Regular expressions</pl>
<pt>Regular expressions</pt>
<it>Regular expressions</it>
<ru>Regular expressions</ru>
<sk>Regular expressions</sk>
<cs>Regular expressions</cs>
<no>Regular expressions</no>
<sv>Regular expressions</sv>
<el>Regular expressions</el>
<uk>Regular expressions</uk>
<ja>Regular expressions</ja>
<bg>Regular expressions</bg>
<hr>Regular expressions</hr>
<zh_CN>Regular expressions</zh_CN>
<zh_TW>Regular expressions</zh_TW>
</lang>
</a></h3>

<lang>
<en>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</en>
<bg>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</bg>
<cs>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</cs>
<de>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</de>
<el>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</el>
<fr>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</fr>
<hr>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</hr>
<zh_CN>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</zh_CN>
<zh_TW>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</zh_TW>
<it>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</it>
<ja>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</ja>
<no>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</no>
<pl>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</pl>
<pt>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</pt>
<ru>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</ru>
<sk>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</sk>
<sv>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</sv>
<uk>
<p>The regular expression searching mode is mostly for the power users
acquainted with the traditional Unix/POSIX regexp syntax.  In the
Simple Search interface you can trigger it by using slashes instead of
quotes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

while in the Advanced Search interface you can select the matching
type explicitely by using the selection box menu.  The above example
will find all the titles that start by the letter <em>E</em>, followed
by any number of any characters, and end by the letter <em>s</em>.
</uk>
<es>
<p>El uso del modo de búsqueda por expresión regular está dirigida
sobre todo a usuarios avanzados que conocen la sintaxis tradicional
Unix/POSIX regexp.  En el interfaz de consulta simple se puede forzar
este modo usando barras inclinadas en lugar de comillas:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

mientras que en el modo de búsqueda Avanzado se puede seleccionar
explícitamente este modo de búsqueda seleccionandolo en el menú
desplegable.  En el ejemplo anterior se recuperarían todos los títulos
que comienzan por la letra <em>E</em>, seguida de cualquier número o
cualquier carácter, y que terminen por la letra <em>s</em>.
</es>

<ca>
<p>L’ ús del mode de cerca per expressió regular està dirigida
sobretot a usuaris avançats que coneixen la sintaxi tradicional
Unix/POSIX regexp.  A l’interficie de consulta simple es pot forçar
aquest mode utilitzant les Barres inclinades enlloc de comentes:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/^E.*s$/">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

Al mode de cerca Avançada es pot seleccionar explícitament aquest mode
de cerca seleccionant-lo al menú desplegable.  a l’exemple anterior es
recuperarien tots els títols que comencen per la lletra <em>E</em>,
seguida de qualsevol número o qualsevol caràcter, i que acabin per la
lletra <em>s</em>.
</ca>
</lang>

<lang>
<en>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</en>
<bg>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</bg>
<cs>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</cs>
<de>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</de>
<el>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</el>
<fr>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</fr>
<hr>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</hr>
<zh_CN>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</zh_CN>
<zh_TW>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</zh_TW>
<it>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</it>
<ja>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</ja>
<no>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</no>
<pl>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</pl>
<pt>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</pt>
<ru>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</ru>
<sk>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</sk>
<sv>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</sv>
<uk>
<p>Another example could be an author search for an author expressed
in the database as either <em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</uk>
<es>
<p>Otro ejemplo similar es el de la búsqueda por autor de un autor que
se ha introducido en la base de datos como <em>Ellis, J</em> o bien
como <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>
</es>

<ca>
<p>Un altre exemple similar és el de la cerca per autor d’un autor que
ha estat introduït a la base de dades com <em>Ellis, J</em> o bé com
<em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>
</ca>
</lang>

<lang>
<en>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</en>
<bg>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</bg>
<cs>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</cs>
<de>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</de>
<el>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</el>
<fr>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</fr>
<hr>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</hr>
<zh_CN>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</zh_CN>
<zh_TW>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</zh_TW>
<it>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</it>
<ja>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</ja>
<no>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</no>
<pl>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</pl>
<pt>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</pt>
<ru>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</ru>
<sk>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</sk>
<sv>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</sv>
<uk>
<p>The regular expression search enables you to formulate very
specific word proximity queries.  For example, let us find all titles
containing words <em>dense</em> and <em>matter</em> that are separated
by at most one word that doesn't contain the letter <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</uk>
<es>
<p>La búsqueda por expresión regular permite formular consultas de
palabras muy específicas por su proximidad.  Por ejemplo, permite
recuperar registros cuyos títulos contienen las palabras
<em>dense</em> y <em>matter</em> y que estén separadas al menos por
una palabra que no contenga la letra <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>
</es>

<ca>
<p>La cerca per expressió regular permet formular consultes de
paraules Molt específiques per proximitat.  Per exemple, permet
recuperar registres Els títols dels quals contenen les paraules
<em>dense</em> i <em>matter</em> i que estiguin separades, al menys,
per una paraula que no contingui la lletra <em>l</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="title:/dense ([^ l]* )?matter/">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>
</ca>
</lang>

<lang>
<en>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</en>
<bg>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</bg>
<cs>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</cs>
<de>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</de>
<el>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</el>
<fr>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</fr>
<hr>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</hr>
<zh_CN>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</zh_CN>
<zh_TW>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</zh_TW>
<it>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</it>
<ja>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</ja>
<no>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</no>
<pl>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</pl>
<pt>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</pt>
<ru>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</ru>
<sk>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</sk>
<sv>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</sv>
<uk>
<p>Note that you can also use character intervals such as
<code>[a-k]</code> and occurrence counts such as <code>{3}</code>.
For example, let us find all preprints that do not follow the year
cataloguing policy, that is <em>YYYY</em> to denote year, optionally
followed by <em>?</em> or by another <em>-YYYY</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

You can use also character classes such <protect><code>[:alnum:]</code></protect>, so
that the above query is equivalent to:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</uk>
<es>
<p>Obsérvese que también pueden utilizarse carácteres de intervalo
como <code>[a-k]</code> y contadores de ocurrencia como
<code>{3}</code>.  Por ejemplo, podemos recuperar todos los pre-prints
que no se corresponden con la política de catalogación <em>AAAA</em>
para describir los años, opcionalmente seguida por <em>?</em> o por
otro <em>-AAAA</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

También pueden utilizarse otras clases de caracteres como
<protect><code>[:alnum:]</code></protect>, el cual en el ejemplo anterior sería
equivalente a:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>
</es>

<ca>
<p>Observis que també poden emprar-se caràcters d’interval com
<code>[a-k]</code> i contadors de concurrència com <code>{3}</code>.
Per ejemple, podem recuperar tots els pre-prints que no es
corresponguin amb la política de catalogació <em>AAAA</em> per
descriure anys, opcionalment seguida per <em>?</em> o per altre
<em>-AAAA</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[0-9]{4}([\?\-]|\-[0-9]{4})?$/">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

També poden emprar-se altres classe de caràcters com
<protect><code>[:alnum:]</code></protect>, que a l’exemple anterior seria
equivalent a:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <protect><input size="40" type="text" name="p" value="collection:PREPRINT -year:/^[[:digit:]]{4}([\?\-]|\-[[:digit:]]{4})?$/"></protect>
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>
</ca>
</lang>

<lang>
<en>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</en>
<bg>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</bg>
<cs>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</cs>
<de>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</de>
<el>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</el>
<fr>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</fr>
<hr>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</hr>
<zh_CN>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</zh_CN>
<zh_TW>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</zh_TW>
<it>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</it>
<ja>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</ja>
<no>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</no>
<pl>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</pl>
<pt>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</pt>
<ru>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</ru>
<sk>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</sk>
<sv>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</sv>
<uk>
<p>To learn more about POSIX regular expressions, please consult the
<a href="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</a> and the <a
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</a>.
</uk>

<es>
<p>Para conocer más acerca de las expresiones regulares POSIX, se
recomienda la consulta de <A
HREF="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</A> y <A
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</A>.
</es>

<ca>
<p>Per conèixer més sobre les expressions regulars POSIX, es recomana
la Consulta de <A
HREF="http://en.wikipedia.org/wiki/Regular_expression">Wikipedia
regexp article</A> i <A
href="http://dev.mysql.com/doc/mysql/en/Regexp.html">MySQL regexp
documentation</A>.
</ca>
</lang>

<h3><a name="span">
<lang>
<en>Span queries</en>
<fr>Span queries</fr>
<de>Bereichs-Recherche</de>
<es>Consultas por rango</es>
<ca>Consultes per rang</ca>
<pl>Span queries</pl>
<pt>Span queries</pt>
<it>Span queries</it>
<ru>Span queries</ru>
<sk>Span queries</sk>
<cs>Span queries</cs>
<no>Span queries</no>
<sv>Span queries</sv>
<el>Span queries</el>
<uk>Span queries</uk>
<ja>Span queries</ja>
<bg>Span queries</bg>
<hr>Span queries</hr>
<zh_CN>Span queries</zh_CN>
<zh_TW>Span queries</zh_TW>
</lang>
</a></h3>

<lang>
<en>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</en>
<bg>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</bg>
<cs>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</cs>
<de>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</de>
<el>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</el>
<fr>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</fr>
<hr>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</hr>
<zh_CN>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</zh_CN>
<zh_TW>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</zh_TW>
<it>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</it>
<ja>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</ja>
<no>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</no>
<pl>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</pl>
<pt>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</pt>
<ru>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</ru>
<sk>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</sk>
<sv>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</sv>
<uk>
<p>The span query is provided via a <code>-></code> sign.  For
example, to search for all documents on <em>muon decay</em> published
between <em>1983</em> and <em>1992</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="muon decay year:1983->1992">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To find all documents by authors with names ranging from <em>Ellis,
J</em> to <em>Ellis, Qqq</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="author:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</uk>

<es>
<p>La consulta por rango se realiza a través del signo
<code>-></code>.  Por ejemplo, para recuperar todos los documentos
sobre <em>par motor</em> publicados entre <em>1983</em> y
<em>1992</em>, debemos escribir:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="destintegraci&oacute;n muon a&ntilde;o:1983->1992">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

Para recuperar todos los documentos de autores cuyos nombres estén
dentro del rango que va de <em>Ellis, J</em> a <em>Ellis, Qqq</em>,
debemos escribir:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="autor:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>
</es>

<ca>
<p>La consulta por rang es realitza a través del signe
<code>-></code>.  Per exemple, per recuperar tots els documents sobre
<em>par motor</em> publicats entre <em>1983</em> i <em>1992</em>, cal
escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="destintegraci&oacute; muon any:1983->1992">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

Per recuperar tots els documents d’autors els noms dels quals estiguin
dins El rang que va des de <em>Ellis, J</em> fins <em>Ellis, Qqq</em>,
cal escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=30 type="text" name="p" value="autor:&quot;Ellis, J&quot;->&quot;Ellis, Qqq&quot;">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>
</ca>
</lang>

<h3><a name="combined">
<lang>
<en>Combined metadata/fulltext/citation search</en>
<fr>Combined metadata/fulltext/citation search</fr>
<de>Kombinierte Metadaten-/Volltext-/Zitatsuche</de>
<es>Combinación de metadatos/texto completo/cita bibliográfica</es>
<ca>Combinació de metadades/text complet/referència bibliogràfica</ca>
<pl>Combined metadata/fulltext/citation search</pl>
<pt>Combined metadata/fulltext/citation search</pt>
<it>Combined metadata/fulltext/citation search</it>
<ru>Combined metadata/fulltext/citation search</ru>
<sk>Combined metadata/fulltext/citation search</sk>
<cs>Combined metadata/fulltext/citation search</cs>
<no>Combined metadata/fulltext/citation search</no>
<sv>Combined metadata/fulltext/citation search</sv>
<el>Combined metadata/fulltext/citation search</el>
<uk>Combined metadata/fulltext/citation search</uk>
<ja>Combined metadata/fulltext/citation search</ja>
<bg>Combined metadata/fulltext/citation search</bg>
<hr>Combined metadata/fulltext/citation search</hr>
<zh_CN>Combined metadata/fulltext/citation search</zh_CN>
<zh_TW>Combined metadata/fulltext/citation search</zh_TW>
</lang>
</a></h3>

<lang>
<en>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</en>
<bg>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</bg>
<cs>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</cs>
<de>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</de>
<el>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</el>
<fr>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</fr>
<hr>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</hr>
<zh_CN>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</zh_CN>
<zh_TW>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</zh_TW>
<it>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</it>
<ja>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</ja>
<no>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</no>
<pl>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</pl>
<pt>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</pt>
<ru>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</ru>
<sk>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</sk>
<sv>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</sv>
<uk>
<p>All the syntax mentioned above can be combined together in one
   query.  For example, to find documents that have the word
   <em>ellis</em> inside author fields, that do not contain words like
   <em>muon</em>, 'muonic' etc in any field, that contain the phrase
   (or the substring, to be more precise) 'dense quark matter' inside
   abstract fields, and that were published in year starting by digits
   '200', type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   Note that the default "any field" global index does contain only the metadata terms,
   not the citation nor fulltext terms.  You have to explicitely mention <code>fulltext</code>
   or <code>reference</code> index to search there.  For example, to find the term <em>Higgs</em>
   in either metadata, references or fulltext files, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   This permits an interesting combination of metadata, fulltext and citation search in
   the same query.  For example, to get all documents written by
   <em>Lin</em> whose fulltext files contain the words
   <em>Schwarzschild</em> and <em>AdS</em>, and who cite journal
   <em>Adv. Theor. Math. Phys.</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, fulltext files and references are not fully searchable on the CERN site.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</uk>
<es>
<p>Toda la sintaxis mencionada anteriormente se puede combinar en una
misma consulta.  Por ejemplo, para recuperar documentos que contienen
la palabra <em>ellis</em> dentro del campo autor, y que no contienen
palabras como <em>muon</em>, 'muonic', etc., en ningún otro
campo, y que contienen (o subcadena de palabras, para ser más
precisos) ‘dense quark matter’ dentro del campo de resumen, y que han sido
publicados dentro de los años que comienzan por los dígitos '200',
debe escribirse:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

Obsérvese que la opción de índice global “cualquier campo” por defecto
contiene únicamente términos de metadatos, no del texto completo ni de
las citas bibliográficass.  Es necesario especificar explícitamente
las opciones de buscar en el índice <code>texto completo</code> o de
<code>cita bibliográfica</code> si se desea buscar en estos campos.
Por ejemplo, para recuperar el término <em>Higgs</em> tanto dentro de
los metadatos, las citas o el texto completo, debe escribirse:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

Ello permite una interesante combinación de metadatos, texto completo
y citas dentro de una misma búsqueda.  Por ejemplo, para recuperar
todos los documentos escritos por <em>Lin</em> que en el texto
completo contengan las palabras <em>Schwarzschild</em> y <em>AdS</em>,
que citen la revista <em>Adv. Theor. Math. Phys.</em>, debe
escribirse:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">cualquier campo<option> t&iacute;tulo <option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table CLASS="errorbox">
   <thead>
   <tr>
   <TH CLASS="errorboxheader">
   NOTA IMPORTANTE
   </TH>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Actualmente, los registros con archivos a texto completo y citas no se pueden recuperar en el web de CERN.      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </TBODY>
   </table>
">
</es>

<ca>
<p>Tota la sintaxi mencionada anteriorment es pot combinar en una
mateixa consulta.  Per exemple, per recuperar documents que contenen
la paraula <em>ellis</em> dins el camp d’autor, i que no contenen
paraules com <em>muon</em>, 'muonic', etc., a cap altre
camp, i que contenen la frase (o subcadena de paraules, per ser més
precisos) ‘dense quark matter’ dins el camp de resum, i que han estat
publicats dins els anys que comencen pels dígits '200', cal escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:ellis -muon* +abstract:'dense quark matter' year:200*">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

Observis que l’opció d’índex global “qualsevol camp” per defecte conté
només els termes de metadades, no del text complet ni de les
referències bibliogràfiques.  Cal especificar explícitament les
opcions de cercar a l’índex <code>text complet</code> o de
<code>referència bibliogràfica</code> si volem cercar per aquests
camps.  Per exemple, per recuperar el terme <em>Higgs</em> tant dins
les metadades, les referències o el text complet, cal escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="higgs or reference:higgs or fulltext:higgs">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

   Això permet una interessant combinació de metadades, text complet i
   referències dins una mateixe cerca.  Per exemple, per recuperar
   tots els documents escrits per <em>Lin</em> que en el text complet
   continguin les paraules <em>Schwarzschild</em> and <em>AdS</em>,
   que citi la revista <em>Adv. Theor. Math. Phys.</em>, cal escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:lin fulltext:Schwarzschild fulltext:AdS reference:&quot;Adv. Theor. Math. Phys.&quot;">
      <select name="f"><option value="">qualsevol camp<option> t&iacute;tol <option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" ""1" ""1""
   <p><table class="errorbox">
   <thead>
   <tr>
   <Th class="errorboxheader">
   NOTA IMPORTANT
   </TH>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Actualment, els registres amb arxius a text complet i referències no es poden recuperar al web de CERN.      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </TBODY>
   </table>
">
</ca>
</lang>

<h3><a name="howto">
<lang>
<en>Frequently asked questions</en>
<fr>Frequently asked questions</fr>
<de>FAQ</de>
<es>Preguntas frecuentes</es>
<ca>Preguentes freqüents</ca>
<pl>Frequently asked questions</pl>
<pt>Frequently asked questions</pt>
<it>Frequently asked questions</it>
<ru>Frequently asked questions</ru>
<sk>Frequently asked questions</sk>
<cs>Frequently asked questions</cs>
<no>Frequently asked questions</no>
<sv>Frequently asked questions</sv>
<el>Frequently asked questions</el>
<uk>Frequently asked questions</uk>
<ja>Frequently asked questions</ja>
<bg>Frequently asked questions</bg>
<hr>Frequently asked questions</hr>
<zh_CN>Frequently asked questions</zh_CN>
<zh_TW>Frequently asked questions</zh_TW>
</lang>
</a></h3>

<h4><a name="howto-choose-terms">
<lang>
<en>How to wisely choose your search terms (speed-wise)</en>
<fr>How to wisely choose your search terms (speed-wise)</fr>
<de>Wie wähle ich am geschicktesten meinen Suchbegriff</de>
<es>Escoger correctamente los términos de búsqueda (speed-wise)</es>
<ca>Escollir correctament els térmes de cerca (speed-wise)</ca>
<pl>How to wisely choose your search terms (speed-wise)</pl>
<pt>How to wisely choose your search terms (speed-wise)</pt>
<it>How to wisely choose your search terms (speed-wise)</it>
<ru>How to wisely choose your search terms (speed-wise)</ru>
<sk>How to wisely choose your search terms (speed-wise)</sk>
<cs>How to wisely choose your search terms (speed-wise)</cs>
<no>How to wisely choose your search terms (speed-wise)</no>
<sv>How to wisely choose your search terms (speed-wise)</sv>
<el>How to wisely choose your search terms (speed-wise)</el>
<uk>How to wisely choose your search terms (speed-wise)</uk>
<ja>How to wisely choose your search terms (speed-wise)</ja>
<bg>How to wisely choose your search terms (speed-wise)</bg>
<hr>How to wisely choose your search terms (speed-wise)</hr>
<zh_CN>How to wisely choose your search terms (speed-wise)</zh_CN>
<zh_TW>How to wisely choose your search terms (speed-wise)</zh_TW>
</lang>
</a></h4>
<p>

<lang>
<en>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</en>
<bg>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</bg>
<cs>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</cs>
<de>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</de>
<el>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</el>
<fr>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</fr>
<hr>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</hr>
<zh_CN>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</zh_CN>
<zh_TW>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</zh_TW>
<it>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</it>
<ja>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</ja>
<no>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</no>
<pl>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</pl>
<pt>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</pt>
<ru>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</ru>
<sk>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</sk>
<sv>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</sv>
<uk>
<ul>
<li>Whenever possible, prefer word searches instead of phrase searches.
    Search rather for <code>black hole</code> than for <code>"black hole"</code>.
<li>Avoid common terms such as <code>and</code>, <code>of</code>, or <code>CERN</code>.
<li>If you are searching for a specific metadata information, such
    as a <em>report number</em>, choose corresponding index.
<li>If you are looking for a specific document collection, such
    as <em>Theses</em>, choose the
    <a href="<WEBURL>/?c=Theses">Theses</a> collection first, and start your search from there.
</ul>
</uk>
<es>
<p>
<ul>
<li>Siempre que sea posible, es preferible realizar búsquedas por
palabra antes que por frase.  Es preferible buscar por <code>agujero
negro</code> que por <code>"agujero negro"</code>.
<li>Se aconseja evitar vocablos comunes tales como <code>y</code>,
<code>de</code>, o siglas como <code>CERN</code>.
<li>Si la búsqueda versa sobre información específica en los
metadatos, como por ejemplo, <em>número de registro</em>, seleccionar
el índice correspondiente.
<li>Si la búsqueda versa sobre una colección específica de documentos,
como por ejemplo, <em>Tesis</em>, elegir en primer lugar la colección
<A HREF="<WEBURL>/?c=Theses">Tesis</A>, e iniciar la búsqueda a partir
de aquí.  </ul>
</es>

<ca>
<p>

<ul>
<li>Sempre que sigui possible, es preferible realitzar cerques per
paraula abans que per frase.  Es preferible una cerca per <code>forat
negre</code> que per <code>"forat negre"</code>.
<li>S’aconsella evitar mots comuns tals com les
preposicions<code>i</code>, <code>de</code>, o sigles com
<code>CERN</code>.
<li>Si la cerca versa sobre informació específica a les metadades, com
per exemple, <em>número de registre</em>, cal seleccionar l’índex
corresponent.
<li>Si la cerca versa sobre una col•lecció específica de documents,
com per exemple, <em>Tesis</em>, cal escollir en primer lloc la
col•lecció <A HREF="<WEBURL>/?c=Theses">Tesis</A>, e iniciar la cerca
a partir de aquí.
</ul>
</ca>
</lang>

<h4><a name="howto-search-for-author">
<lang>
<en>How to search for publications by a given author</en>
<fr>How to search for publications by a given author</fr>
<de>Wie suche ich nach Publikationen eines bestimmten Autors</de>
<es>¿Como localizar publicaciones a partir del autor?</es>
<ca>Com localitzar publicacions a partir de l'autor?</ca>
<pl>How to search for publications by a given author</pl>
<pt>How to search for publications by a given author</pt>
<it>How to search for publications by a given author</it>
<ru>How to search for publications by a given author</ru>
<sk>How to search for publications by a given author</sk>
<cs>How to search for publications by a given author</cs>
<no>How to search for publications by a given author</no>
<sv>How to search for publications by a given author</sv>
<el>How to search for publications by a given author</el>
<uk>How to search for publications by a given author</uk>
<ja>How to search for publications by a given author</ja>
<bg>How to search for publications by a given author</bg>
<hr>How to search for publications by a given author</hr>
<zh_CN>How to search for publications by a given author</zh_CN>
<zh_TW>How to search for publications by a given author</zh_TW>
</lang>
</a></h4>

<lang>
<en>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</en>
<bg>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</bg>
<cs>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</cs>
<de>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</de>
<el>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</el>
<fr>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</fr>
<hr>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</hr>
<zh_CN>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</zh_CN>
<zh_TW>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</zh_TW>
<it>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</it>
<ja>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</ja>
<no>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</no>
<pl>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</pl>
<pt>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</pt>
<ru>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</ru>
<sk>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</sk>
<sv>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</sv>
<uk>
<p>You can search for an author in many ways, each having its own
advantages and disadvantages.

<ol>

<li>First of all, note that searching for words isn't usually what you
would want here.  If you choose to search for the words <code>Ellis
J</code> within the author index, it means that two queries (for the
words <code>Ellis</code> and <code>J</code>) are effected first and a
boolean AND is performed next:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>Such a query would match also a document whose first author is
<em>Ellis, R</em> and the second author <em>Finch, A J</em>, which is
probably not what you wanted.  While the search is very fast and you
would have found the results for the author you were looking for, such
a technique could have returned you many false positives, as the one
cited above.  Instead of searching for words, a more suitable
technique to apply in this case is to search for phrases which will
permit you to achieve higher search precisions.

<li>The author names are usually stored in a form containing initials
only, such as <em>Ellis, J</em>.  To get the list of publications of
an author whose name is spelled exactly that way, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>
</uk>
<es>
<p>La búsqueda por autor puede realizarse de diversas formas, cada una
de las cuales presenta sus ventajas y desventajas.

<OL>

<li>En primer lugar, es necesario anotar que el modo de búsqueda por
palabras no es el que más adecuado en este tipo de búsqueda.  Si se
selecciona la búsqueda por palabras <code>Ellis J</code> dentro del
índice de autores, ello se interpretará como dos consultas (para las
palabras <code>Ellis</code> y <code>J</code>) que se efectuarán en
primer lugar, y una booleana Y que se realizará después.

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<OPTION selected>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

<p>La consulta realizada de este modo recuperará también un documento
que presenta como primer autor a <em> Ellis, R </em> y como segundo
autor <em>Finch, A J</em>, lo cual, probablemente, no es lo deseado.
La búsqueda se ha realizado muy rápidamente y se han recuperado
registros sobre el autor requerido, sin embargo, los resultados
recuperados siguiendo este método pueden no ser pertinentes, tal y
como ocurre en el ejemplo citado anteriormente. En lugar de buscar por
palabras, la técnica más conveniente que debe aplicarse en este caso
es la búsquda por frase, que permite conseguir mayor precisión.

<li>Es habitual que los nombres de autores que se introducen a través
de los formularios contengan únicamente la inicial del nombre, como
por ejemplo, <em>Ellis, J</em>.  Para obtener un listado de las
publicaciones de dicho autor con el nombre escrito exactamente de ese
modo, debemos escribir:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>
</es>

<ca>
<p>La cerca per autor es pot realitzar de diverses formes, cadascuna
de les quals presenta els seus avantatges i les seves desavantatges.

<OL>

<li>En primer lloc, cal notar que el mode de cerca per paraules no és
el més adient en aquests casos. Si es selecciona la cerca per paraules
<code>Ellis J</code> dins l’índex d’autors, s’interpretarà como a dues
consultes (per a les paraules <code>Ellis</code> i <code>J</code>) que
es realitzaran en primer lloc, i una booleana I que es realitzarà
després.

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="Ellis J">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<OPTION selected>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

<p>La consulta realitzada d’aquesta forma recuperarà també un document
que tingui com a primer autor a <em> Ellis, R </em> i com a segon
autor a <em>Finch, A J</em>, fet que, probablement, no es el desitjat.
La cerca s’ha realitzat amb molta rapidesa i s’han recuperat registres
sobre l’autor requerit, ara bé, els resultats obtinguts seguint aquest
métode poden no ser pertinents, tal i com passa a l’exemple citat
anteriorment.  En lloc de cercar per paraules, la tècnica més
convenient que s’ha d’aplicar en aquests casos és la cerca per frase,
que permet aconseguir major grau de precisió.

<li>Es habitual que els noms d’autors que s’introdueixen a través dels
formularis continguin únicament la inicial del nom, com per exemple,
<em>Ellis, J</em>.  Per obtenir un llistat de les publicacions de tal
autor amb el nom escrit exactament d’aquesta manera, cal escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J&quot;">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>
</ca>
</lang>

<lang>
<en>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</en>
<bg>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</bg>
<cs>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</cs>
<de>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</de>
<el>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</el>
<fr>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</fr>
<hr>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</hr>
<zh_CN>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</zh_CN>
<zh_TW>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</zh_TW>
<it>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</it>
<ja>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</ja>
<no>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</no>
<pl>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</pl>
<pt>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</pt>
<ru>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</ru>
<sk>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</sk>
<sv>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</sv>
<uk>
<p>This way of searching gives you the highest precision and no false
positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em>, an assumption that is often false<a
href="#author-full-names"><sup>*</sup></a>.)  The search is very fast.

<li> Sometimes an author's first name may be spelled abbreviated on
some documents (such as <em>Ellis, J</em>) and sometimes full on
others (such as <em>Ellis, John</em>; eventually also with the middle
name: <em>Ellis, John Rolfe</em>).  To get the list of publications
for all these forms at the same time, you could use a boolean OR
query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>This way of searching still keeps the highest precision and no
false positives.  (Assuming there are no other authors whose names are
spelled <em>Ellis, J</em> or <em>Ellis, John</em>, an assumption that
is often false<a href="#author-full-names"><sup>*</sup></a>.)  The search is
fast.

<li>To match all of the above forms in a single search term, you can
try to use a wildcard query:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would match all author names that start by the text
<code>Ellis, J</code>, i.e. not only the wanted forms <em>Ellis,
J</em> and <em>Ellis, John</em>, but also <em>Ellis, Jim</em>, or
<em>Ellis, John Rolfe</em>, or <em>Ellis, Jonathan Richard</em>.

<p>This way of searching returns you more results, which may be
suitable in case you don't know how the names are spelled in the
database.  But you also risk the eventuality of getting false
positives.  The search is relatively fast.

<li>Yet another, the most general alternative is to use a partial
phrase matching:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<p>It would find not only all the authors mentioned above, but also
the ones whose names contain the expression <code>Ellis, J</code>
anywhere inside the name, such as <em>De Lellis, Jim</em>.  It thus
gives you the largest possible number of hits at the largest risk of
false positives.  The search is relatively slow.

<p>(Note though that this way of searching may be very handy in case
of compound family names such <em>Pepe-Altarelli, M</em> or <em>'t
Hooft, G</em> where a casual user query for <em>Hooft, G</em> would
match the wanted author, unlike the methods mentioned above.)

<li>Finally, let us note that you can use the <a href="#regexp">regular
expression syntax</a> to construct any complex author query.  A simple
example is to search for an author expressed in the database as either
<em>Ellis, J</em> or <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">any field<option>title<option selected>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Please consult <a href="#regexp">regular expression searching tips</a>
to know more about regular expression search possibilities.

</ol>

<p><a name="author-full-names"><strong><sup>*</sup>NOTE:</strong></a>
If you produce your own list of publications and you notice that
sometimes your first name is spelled abbreviated and sometimes in
full, or if you want to identify your publications among several
authors with the same abbreviation, please contact the <a
href="mailto:<ADMINEMAIL>">administrators</a> of <CDSNAMEINTL> so that
they could work with you on inputting a consistently spelled and
properly formatted first name everywhere.  Only the consistent
database content will ensure a proper author searching behaviour.
</uk>
<es>
<p>Esta técnica de búsqueda confiere mayor precisión y evita falsos
resultados aparentemente positivos.  (La presunción de que no existen
otros autores cuyo nombre se escriba como <em>Ellis, J</em>, en
ocasiones puede no ser cierta<A
href="#author-full-names"><sup>*</sup></A>.)  La búsqueda se realizará
con mucha rapidez.

<li> Algunas veces, en algunos documentos, el nombre propio de un
autor se escribe de forma abreviada, (como <em>Ellis, J</em>) y otras
de forma completa (como <em>Ellis, John</em>; y en algunas ocasiones
también con el nombre compuesto:<em>Ellis, John Rolfe</em>).  Para
obtener una lista de publicaciones del autor con todas sus formas en
una misma búsqueda, se puede utilizar el operador booleano O:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

<p>Este modo de búsqueda nos ofrece aún mayor precisión y evita falsos
resultados positivos (o no pertinentes).  (La presunción de que no hay
más autores que se escriban como <em>Ellis, J</em> O <em>Ellis,
John</em>, en ocasiones puede no ser cierta <A
HREF="#author-full-names"><SUP>*</SUP></A>.)  La búsqueda es muy
rápida.

<li>Para localizar todas las formas introducidas en el ejemplo
anterior con un único término de búsqueda, podemos probar de utilizar
una búsqueda con comodín:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">cualquier campo<option> t&iacute;tulo <option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

<p>Ello recuperará todos los nombres de autor que comienzan con el
texto <code>Ellis, J</code>, no sólo con las formas requeridas en el
ejemplo <em>Ellis, J</em> y <em>Ellis, John</em>, sino también
<em>Ellis, Jim</em>, o <em>Ellis, John Rolfe</em>, o <em>Ellis,
Jonathan Richard</em>.

<p>Esta búsqueda retornará muchos más resultados, pero puede resultar
conveniente en el caso en que se desconozca la forma de introducción
de los nombres en la base de datos.  Sin embargo, aumenta el riesgo de
obtener resultados poco pertinentes.  La búsqueda es relativamente rápida.

<li>Aparte de esta última, la alternativa general más utilizada es el
uso de una búsqueda por parte de la frase:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

<p>Esta búsqueda recupera no sólo todos los autores mencionados, sino
también todos aquellos cuyos nombres contengan la expresión
<code>Ellis, J</code> en cualquier parte de su nombre, como por
ejemplo <em>De Lellis, Jim</em>.  Ello aumenta enormemente las
posibilidades de obtener registros con un alto riesgo de ser poco
pertinentes.  La búsqueda es relativamente lenta.

<p>(Obsérvese que este modo de búsqueda puede resultar muy práctico
para apellidos compuestos tales como <em>Pepe-Altarelli, M</em> o
<em>'t Hooft, G</em> en la que una consulta puntual de usuario por
<em>Hooft, G</em> recuperará el autor requerido, a diferencia de los
métodos mencionados anteriormente.)

<li>Finalmente, anotar que es posible utilizar la <A
HREF="#regexp">sintaxis de expresión regular</A> para construir
consultas complejas para buscar por autor.  Un ejemplo sencillo es la
búsqueda de un autor introducido en la base de datos tanto como
<em>Ellis, J</em> como <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<OPTION selected>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

Se recomienda la consulta de <A HREF="#regexp">búsqueda por
expresiones regulares</A> para conocer más acerca de las posibilidades
de este modo de búsqueda.

</OL>

<p><A name="author-full-names"><strong><sup>*</sup>NOTA:</strong></A>
Si es autor de su propia lista de publicaciones y detecta que algunas
veces su nombre se escribe de forma abreviada y a veces completo, o si
desea identificar sus publicaciones entre diversos autores con la
misma forma abreviada, por favor contacte con los<A
href="mailto:<ADMINEMAIL>">administradores</A> de <CDSNAMEINTL> que
trataran de trabajar conjuntamente para implementar una forma
consistente y normalizada de introducción de su nombre en toda la base
de datos.  Sólo una base de datos con contenido consistente puede
garantizar una búqueda por autores exitosa.
</es>


<ca>
<p>Aquesta tècnica de cerca confereix major grau de precisió i evita falsos
resultats aparentement positius.  (La presumpció de que no existeixen
altres autores els noms dels quals s’escrigui com <em>Ellis, J</em>, en
ocasions pot no ser certa<A
href="#author-full-names"><sup>*</sup></A>.)  La cerca es realitzarà
con amb molta rapidesa.

<li> Algunes vegadess, en alguns documents, el nom propi d’un
autor s’escriu de forma abreujada, (com <em>Ellis, J</em>) i altres
de forma completa (com <em>Ellis, John</em>; i en altres ocasions
també amb el nom compost:<em>Ellis, John Rolfe</em>).  Per
obtenir una llista de publicacions de l’autor amb totes les seves formes en
una mateixa cerca, es pot utilitzar l’operador booleà O:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=60 type="text" name="p" value="author:&quot;Ellis, J&quot; or author:&quot;Ellis, John&quot; or author:&quot;Ellis, John Rolfe&quot;">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

<p>Aquest mode de cerca ens ofereix encara major grau de precisió i
evita falsos resultats positius (o no pertinents).  (La presumpció de
que no hi ha més autors que s’escriguin com <em>Ellis, J</em> O
<em>Ellis, John</em>, en ocasions pot no ser certa <A
HREF="#author-full-names"><SUP>*</SUP></A>.)  La cerca és molt ràpida.

<li>Per localitzar totes les formes introduïdes a l’exemple anterior
amb un únic terme de cerca, podem provar d’emprar una cerca amb
comodí:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:&quot;Ellis, J*&quot;">
      <select name="f"><option value="">qualsevol camp<option> t&iacute;tol <option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

<p>Això recuperarà tots els noms d’autor que comencen amb el text
<code>Ellis, J</code>, no només amb les formes requerides a l’exemple
<em>Ellis, J</em> i <em>Ellis, John</em>, sinó també <em>Ellis,
Jim</em>, o <em>Ellis, John Rolfe</em>, o <em>Ellis,Jonathan
Richard</em>.

<p>Aquesta cerca retornarà molts més resultats, però pot resultar
convenient en el cas que es desconegui la forma d’introducció dels
noms a la base de dades.  Ara bé, augmenta el risc d’obtenir resultats
poc pertinents. La cerca és relativament ràpida.

<li>Apart d’aquesta darrera, l’alternativa general més emprada és la
cerca per part de la frase:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:'Ellis, J'">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

<p>Aquesta cerca recupera no només tots els autors mencionats, sinó
també tots aquells els noms dels quals continguin l’expresió
<code>Ellis, J</code> a qualsevol part del seu nom, com per exemple
<em>De Lellis, Jim</em>.  Això augmenta enormement les possibilitats
d’obtenir registres amb un alt risc de ser poc pertinents.  La cerca
és relativament lenta.

<p>(Observis que aquest mode de cerca pot resultar molt pràctic per a
cognoms compostos, tals com <em>Pepe-Altarelli, M</em> o <em>'t Hooft,
G</em> en els que una consulta d’una consulta puntual de usuario por
<em>Hooft, G</em> recuperarà l’autor requerit, a diferència dels
mètodes mencionats anteriorment.)

<li>Finalment, anotar que es possible emprar la <A
HREF="#regexp">sintaxi de expressió regular</A> per construir
consultes complexes per fer cerques per autor.  Un exemple senzill és
la cerca d’un autor introduït a la base de dades tant per <em>Ellis,
J</em> com per <em>Ellis, John</em>:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="author:/^Ellis, (J|John)$/">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<OPTION selected>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

Es recomana la consulta de <A HREF="#regexp">cerca per expressions
regulars</A> per conèixer més sobre les possibilitats d’aquest mode de
cerca.  </ol>

<p><A name="author-full-names"><strong><SUP>*</SUP>NOTA:</strong></A>
Si es autor de la seva pròpia llista de publicacions i detecta que
algunes vegades el seu nom s’escriu de forma abreujada i de vegades
complet, o si desitja identificar les seves publicacions entre
diversos autors amb la mateixa forma abreujada, sis plau, contacti amb
els <A href="mailto:<ADMINEMAIL>">administradors</A> de <CDSNAMEINTL>
que tractaran de treballar-hi conjuntament per implementar una forma
consistent i normalitzada d’introducció del seu nom a tota la base de
dades.  Només una base de dades amb contingut consistent pot garantir
una cerca per autors exitosa.
</ca>
</lang>

<h4><a name="howto-sort-pattern">
<lang>
<en>How to sort according to a certain pattern</en>
<fr>How to sort according to a certain pattern</fr>
<de>Wie lasse ich Ergebnisse auf eine bestimmte Weise sortieren</de>
<es>¿Cómo ordenar acorde a cierto patrón de ordenación?</es>
<ca>Com ordenar d'acord a cert patró d'ordenació?</ca>
<pl>How to sort according to a certain pattern</pl>
<pt>How to sort according to a certain pattern</pt>
<it>How to sort according to a certain pattern</it>
<ru>How to sort according to a certain pattern</ru>
<sk>How to sort according to a certain pattern</sk>
<cs>How to sort according to a certain pattern</cs>
<no>How to sort according to a certain pattern</no>
<sv>How to sort according to a certain pattern</sv>
<el>How to sort according to a certain pattern</el>
<uk>How to sort according to a certain pattern</uk>
<ja>How to sort according to a certain pattern</ja>
<bg>How to sort according to a certain pattern</bg>
<hr>How to sort according to a certain pattern</hr>
<zh_CN>How to sort according to a certain pattern</zh_CN>
<zh_TW>How to sort according to a certain pattern</zh_TW>
</lang>
</a></h4>

<lang>
<en>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</en>
<bg>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</bg>
<cs>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</cs>
<de>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</de>
<el>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</el>
<fr>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</fr>
<hr>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</hr>
<zh_CN>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</zh_CN>
<zh_TW>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</zh_TW>
<it>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</it>
<ja>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</ja>
<no>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</no>
<pl>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</pl>
<pt>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</pt>
<ru>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</ru>
<sk>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</sk>
<sv>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</sv>
<uk>
<p>You may select a certain field according to which sort the search
   results, for example to sort the results by main title.  However,
   sometimes you may want to sort by a report number and it happens
   that your documents have several of them.  For example, the report
   numbers <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> and
   <em>RM3-TH-02-4</em> all denote <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">the
   same document</a>.  Now if you sort your search results set
   containing this document, the system will take into consideration
   the first report number, that may be either of these three.
   Sometimes you may want to classify this document under its
   <em>hep-ph</em> number, sometimes under its <em>CERN</em> number,
   depending on whether you produce a list of CERN or hep-ph
   publications.  How can you influence the search engine to prefer
   one report number rather than the other?

   <p>In other words, the search engine by default answers a query
   like "sort by first author" or "sort by first report number", but
   sometimes you may want to ask the search engine to "sort by first
   report number that starts by the text <em>CERN-</em>".  The latter
   possibility is available via a "silent" sort parameter called
   <code>sp</code> (for "sort pattern") that sorts preferentially
   according to the given textual pattern if they can be found.  The
   parameter is "silent" in a way that it is not present in the search
   interface, you have to add it manually to your search URL.

   For example, to get all CERN-TH publications of the year 2001
   sorted by their CERN-TH numbers, you would search for
   <code>CERN-TH-2001*</code> within <code>reportnumber</code> index,
   and on the search results page, being satisfied with the results,
   you would add <code>&sp=CERN-TH</code> to the URL to sort the
   results preferentially by CERN-TH report numbers, to get a <a
   href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">nicely
   sorted list</a> of all CERN-TH 2001 publications.
</uk>
<es>
<p>Es posible seleccionar un campo determinado en función del tipo de
   ordenación de los resultados de búsqueda, por ejemplo para
   ordenarse los resultados por el título principal.  De este modo, en
   ocasiones puede ocurrir que se desee ordenar los documentos por el
   código de referencia y que un mismo documento tenga más de uno.
   Por ejemplo, los códigos <em>hep-ph/0204140</em>,
   <em>CERN-TH-2002-069</em> y <em>RM3-TH-02-4</em> apuntan todos <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">al
   mismo documento</a>. Si se ordena el conjunto de resultados de
   búsqueda contenidos en el documento, el sistema tendrá en cuenta el
   primer número de informe, que puede ser cualquiera de los tres.  En
   ocasiones se puede desear clasificar un documento según un
   determinado código de referencia <em> hep-ph </em>, u otro <em>
   CERN> </em> según si se ha publicado en una colección de
   publicaciones de CERN o hep-ph. ¿Como se puede influir en el motor
   de búsqueda para priorizar un código antes que otro?

   <p>En otras palabras, el motor de búsqueda responde por defecto a
   una pregunta similar a “ordena por el primer autor” u “ordena por
   el primer código de informe”, pero en ocasiones se desea instar al
   buscador para que ordene por el “primer código de informe que
   comience por el texto <em>CERN-</em>".  Esta opción es posible a
   través del uso de un paràmetre de ordenación “invisible” denominado
   <code>sp</code> (para a "ordenar según un patrón") que permite
   ordenar siguiendo un patron de preferencia dado.  Este parámetro es
   “invisible” desde el punto de vista de que no está presente en el
   interfaz de búsqueda, sino que debe ser añadido manualmente en el
   URL de la búsqueda.

Por ejemplo, para recuperar todas las publicaciones del CERN-TH del
año 2001 ordenados por su código, debe buscarse por
<code>CERN-TH-2001*</code> dentro del índice <code>código de
informe</code>, y en la página de resultados de búsqueda, cuando esté
satisfecho con los resultados obtenidos, añadir
<code>&sp=CERN-TH</code> en el URL a fin de ordenar los resultados
sgún los códigos de informe CERN-TH, y conseguir una correcta <a
href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">
ordenación del listado</a> de todas las publicaciones CERN-TH del
2001.
</es>

<ca>
<p>Es possible seleccionar un camp determinat en funció del tipus
   d’ordenació dels resultats de la cerca, per exemple per ordenar els
   resultats pel títol principal. D’aquesta forma, en ocasions pot
   passar que es desitgi ordenar els documents pel codi de referència
   i que un mateix document en tingui més d’un.  Per exemple, els
   codis <em>hep-ph/0204140</em>, <em>CERN-TH-2002-069</em> i
   <em>RM3-TH-02-4</em> apunten tots <a
   href="<WEBURL>/search?p=CERN-TH-2002-069&amp;f=reportnumber">al
   mateix document</a>. Si s’ordena el conjunt de resultats de cerca
   que conté el document, el sistema tindrà en consideració el primer
   número d’informe, que pot ser qualsevol dels tres.  En ocasions es
   desitja classificar un document segons un determinat codi de
   referència <em> hep-ph </em>, o altre <em> CERN> </em> segons si ha
   estat publicat a una col•lecció de publicacions CERN o hep-ph. Com
   es pot influir en el motor de cerca per prioritzar un codi abans de
   l’altre?

   <p>En altres paraules, el motor de cerca respon per defecte a una
   pregunta semblant a “ordena pel primer autor” o “ordena pel primer
   codi d’informe”, però en ocasions es pot desitjar instar al
   cercador per tal que ordeni pel “primer codi d’informe que comenci
   pel text <em>CERN-</em>".  Aquesta darrera opció és possible a
   través d’un paràmetre d’ordenació “invisible” denominat
   <code>sp</code> (per a "ordenar segons un patró") que permet
   ordenar segons un patró de preferència donat.  Aquest paràmetre és
   “invisible” des del punt de vista que no és present a l’interfície
   de cerca, sinó que ha d’afegir-se manualment a la URL de cerca.

Per exemple, per recuperar totes les publicacions del CERN-TH de l’any
2001 ordenats pel seu codi, cal cercar per <code>CERN-TH-2001*</code>
dins l’índex de <code>códi d’informe</code>, i a la pàgina de
resultats de cerca, quan s’estigui satisfet amb els resultats
obtinguts, afegir <code>&sp=CERN-TH</code> a la URL per tal d’ordenar
els resultats segons els codis d’informe CERN-TH, i aconseguir una
correcta <a
href="<WEBURL>/search?p=reportnumber%3A%22CERN-TH-2001*%22&sf=reportnumber&so=a&sp=CERN-TH">
ordenació de la llista </a> de totes les publicacions CERN-TH del
2001.
</ca>
</lang>

<h4><a name="howto-hepdoc">
<lang>
<en>How to get documents from other servers (Google, SPIRES, KEK)</en>
<fr>How to get documents from other servers (Google, SPIRES, KEK)</fr>
<de>Wie bekomme ich Dokumente anderer Server (Google, SPIRES, KEK)</de>
<es>¿Cómo obtener documentos de otros servidores? (Google, SPIRES, KEK)</es>
<ca>Com obtenir documents d'altres servidors? (Google, SPIRES, KEK)</ca>
<pl>How to get documents from other servers (Google, SPIRES, KEK)</pl>
<pt>How to get documents from other servers (Google, SPIRES, KEK)</pt>
<it>How to get documents from other servers (Google, SPIRES, KEK)</it>
<ru>How to get documents from other servers (Google, SPIRES, KEK)</ru>
<sk>How to get documents from other servers (Google, SPIRES, KEK)</sk>
<cs>How to get documents from other servers (Google, SPIRES, KEK)</cs>
<no>How to get documents from other servers (Google, SPIRES, KEK)</no>
<sv>How to get documents from other servers (Google, SPIRES, KEK)</sv>
<el>How to get documents from other servers (Google, SPIRES, KEK)</el>
<uk>How to get documents from other servers (Google, SPIRES, KEK)</uk>
<ja>How to get documents from other servers (Google, SPIRES, KEK)</ja>
<bg>How to get documents from other servers (Google, SPIRES, KEK)</bg>
<hr>How to get documents from other servers (Google, SPIRES, KEK)</hr>
<zh_CN>How to get documents from other servers (Google, SPIRES, KEK)</zh_CN>
<zh_TW>How to get documents from other servers (Google, SPIRES, KEK)</zh_TW>
</lang>
</a></h4>

<lang>
<en>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</en>
<bg>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</bg>
<cs>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</cs>
<de>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</de>
<el>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</el>
<fr>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</fr>
<hr>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</hr>
<zh_CN>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</zh_CN>
<zh_TW>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</zh_TW>
<it>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</it>
<ja>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</ja>
<no>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</no>
<pl>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</pl>
<pt>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</pt>
<ru>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</ru>
<sk>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</sk>
<sv>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</sv>
<uk>
<p>On the search results page, links to other servers like <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> or <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> are
automatically proposed in a box entitled "Try your search on".  You
can simply click on the proposed links to run your query on these
search engines.

<p>Note that the links aren't printed if the search engine doesn't
support it.  For example, SPIRES or KEK cannot search for terms within
"any field", so we don't link to them in these cases.

<ifeq "<CFG_CERN_SITE>" "1" "

   <p>Note also that KEK has scanned a lot of old CERN reports.  If
    you find that we don't have fulltext to some old CERN report, it
    may be worthy to look there.  For example, search for <em>CERN
    ISR-MA/73-17</em> in our system:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">any field<option>title<option>author<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

   and you will see that CDS contains the document in the archives only, i.e. not in a electronic format.
   However, if you follow the proposed <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">KEK search link</a>,
   you will see that KEK proposes &quot;scanned images&quot; that you can download.
">
</uk>
<ca>
<p>A la pàgina de resultats de cerca, s'ofereixen automàticament
enllaços a altres servidors com <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> o <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> sota el nom
de "Proveu la vostra cerca a...".  Amb un simple clic sobre els
enllaços proposats es pot enviar la cerca realitzada en aquests
cercadors.

<p>Observis que els enllaços a altres cercadors no es mostren si el cercador no suporta la cerca.  Per exemple, SPIRES o KEK no poden cercar termes dintre del camp "qualsevol camp", de forma que en aquests casos, el sistema no els enllaçarà.

<ifeq "<CFG_CERN_SITE>" "1" "

<p>Observis també que KEK ha escanejat molts informes antics del CERN. Si es comprova que no es disposa del text complet d'un informe antic del CERN, pot ser interessant cercar aquí.  Per exemple, si es cerca per <em>CERN
    ISR-MA/73-17</em> dins el sistema:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

es pot comprovar que CDS conté el document únicament als arxius, i.e. no en format electrònic.  Ara bé, si seguim <a href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">l'enllaç a KEK</a>proposat, podem observar que ens ofereix &quot;imatges escanejades&quot; que podem descarregar.
">
</ca>

<es>
<p>En la página de resultadoss de búsqueda, se oferecen automáticament
enlaces a otros servidores tales como <a
href="http://google.com/">Google</a>, <a
href="http://www.slac.stanford.edu/spires/hep/">SPIRES</a> o <a
href="http://www-lib.kek.jp/KISS/kiss_prepri.html">KEK</a> bajo el
nombre de "Intentar la búsqueda en...".  Con un simple cic sobre los
enlaces propuestos se puede enviar la búsqueda realizada en dichos
buscadores.

<p>Obsérvese que los enlaces a otros cercadores no se muestran si el
buscador no soporta el tipo de búsqueda.  Por ejemplo, SPIRES o KEK no
pueden buscar términos dentro del campo "cualquier campo", de forma
que en estos casos, el sistema no los enlazará.

<ifeq "<CFG_CERN_SITE>" "1" "

<p>Obsérvese también que KEK ha escaneado un gran número de informes
    antiguos del CERN. Si se comprueba que no se dispone del texto
    completo de un informe antiguo del CERN, puede ser interesante
    buscar allí.  Por ejemplo, si se busca por <em>CERN
    ISR-MA/73-17</em> dentro del sistema:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="CERN ISR-MA/73-17">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor<option selected>reportnumber</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

se puede comprobar que CDS contiene el documento únicamente en los
archivos, i.e. no en formato electrónico.  Sin embargo, si seguimos <a
href="http://www-lib.kek.jp/cgi-bin/kiss_prepri?RP=CERN%20ISR-MA/73-17">el
enlace a KEK</a>propuesto, podemos observar que nos ofrece
&quot;imágenes escaneadas&quot; que podemos descargar.  ">
</es>
</lang>

<h4><a name="howto-fulltext">
<lang>
<en>How to search in fulltext files</en>
<fr>How to search in fulltext files</fr>
<de>Wie kann ich in verknüpften Volltextdateien suchen</de>
<es>¿Cómo buscar en ficheros a texto completo?</es>
<ca>Com cercar a fitxers a text complet?</ca>
<pl>How to search in fulltext files</pl>
<pt>How to search in fulltext files</pt>
<it>How to search in fulltext files</it>
<ru>How to search in fulltext files</ru>
<sk>How to search in fulltext files</sk>
<cs>How to search in fulltext files</cs>
<no>How to search in fulltext files</no>
<sv>How to search in fulltext files</sv>
<el>How to search in fulltext files</el>
<uk>How to search in fulltext files</uk>
<ja>How to search in fulltext files</ja>
<bg>How to search in fulltext files</bg>
<hr>How to search in fulltext files</hr>
<zh_CN>How to search in fulltext files</zh_CN>
<zh_TW>How to search in fulltext files</zh_TW>
</lang>
</a></h4>

<lang>
<en>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</en>
<bg>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</bg>
<cs>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</cs>
<de>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</de>
<el>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</el>
<fr>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</fr>
<hr>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</hr>
<zh_CN>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</zh_CN>
<zh_TW>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</zh_TW>
<it>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</it>
<ja>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</ja>
<no>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</no>
<pl>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</pl>
<pt>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</pt>
<ru>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</ru>
<sk>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</sk>
<sv>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</sv>
<uk>
<p>If a metadata record contains some associated fulltext files, <CDSNAMEINTL>
tries to extract the textual information from the files and index it into a separate <code>fulltext</code> index.
To search for all records that contain the term <em>e-</em> in their fulltext files,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that fulltext words aren't included in the default global ``any field'' index,
but that you may freely combine a fulltext and metadata search.  For example, to find all
articles written by <em>Ellis</em> that contain the word <em>muon</em> either in the
metadata or in the fulltext, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the fulltext indexes aren't available on the CERN site.
      Assumed operational time: Q1 2007.
      Please use the
      <a href="http://weblib.cern.ch/fulltext.shtml">old fulltext interface</a>
      instead in the meantime.
   </td>
   </tr>
   </tbody>
   </table>
">
</uk>

<ca>
<p>Si un registre de metadades té arxius a text complet associats
<CDSNAMEINTL> tractarà de extraure la informació textual dels arxius e
indexar-la a un índex de <code>text complet</code>separat.  Per
recuperar tots els documents que contenen el terme <em>e-</em>al text
complet dels seus documents associats, cal escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

Recordem que les paraules del text complet no s'inclouen a l'índex
global 'qualsevol camp' predeterminat, però és possible realitzar una
combinació lliure de text complet i metadades dins una mateixa cerca.
Per exemple, per recuperar tots els articles escrits per
<em>Ellis</em> que continguin la paraula <em>muon</em> tant a les
metadades como all text complet, cal escriure:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">qualsevol camp<option> t&iacute;tol <option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   NOTA IMPORTANT
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      En aquests moments, els índexs de text complet no estan disponibles al web del CERN.  Assumed operational time: Q1 2007.
      Sius plau, emprar mentrestant l'antiga
      <a href="http://weblib.cern.ch/fulltext.shtml">interfície de text complet</a>.
   </td>
   </tr>
   </tbody>
   </table>
">
</ca>
<es>
<p>Si un registro de metadatos contiene archivos a texto completo
asociados, <CDSNAMEINTL> tratará de extraer la información textual de
los archivos e indexarla en un índice de <code>texto
completo</code>separado.  Para recuperar todos los documentos que
contienen el término <em>e-</em> en el texto completo de sus
documentos asociados, debemos escribir:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="fulltext:e-">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

Recordamos que las palabras del texto completo no se incluyen en el
índice global 'cualquier campo' predeterminado, pero es posible
realizar una combinación libre de texto completo y metadatos en una
misma búsqueda.  Por ejemplo, para recuperar todos los artículos
escritos por <em>Ellis</em> que contengan la palabra <em>muon</em>
tanto en los metadatos como en el texto completo, debemos escribir:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="muon or fulltext:muon and author:ellis">
      <select name="f"><option value="">cualquier campo<option> t&iacute;tulo <option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>


<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   NOTA IMPORTANTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      En estos momentos, los índices de texto completo no están disponibles en el web del CERN.
      Assumed operational time: Q1 2007.
      Por favor, utilicen mientras tanto el
      <a href="http://weblib.cern.ch/fulltext.shtml"> antiguo interfaz de texto completo</a>.
   </td>
   </tr>
   </tbody>
   </table>
">
</es>
</lang>

<h4><a name="howto-citations">
<lang>
<en>How to search for citations</en>
<fr>How to search for citations</fr>
<de>Wie kann ich nach Zitaten suchen</de>
<es>¿Como buscar citas bibliográficas?</es>
<ca>Cómo cercar referències bibliogàfiques</ca>
<pl>How to search for citations</pl>
<pt>How to search for citations</pt>
<it>How to search for citations</it>
<ru>How to search for citations</ru>
<sk>How to search for citations</sk>
<cs>How to search for citations</cs>
<no>How to search for citations</no>
<sv>How to search for citations</sv>
<el>How to search for citations</el>
<uk>How to search for citations</uk>
<ja>How to search for citations</ja>
<bg>How to search for citations</bg>
<hr>How to search for citations</hr>
<zh_CN>How to search for citations</zh_CN>
<zh_TW>How to search for citations</zh_TW>
</lang>
</a></h4>

<lang>
<en>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</en>
<bg>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</bg>
<cs>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</cs>
<de>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</de>
<el>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</el>
<fr>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</fr>
<hr>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</hr>
<zh_CN>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</zh_CN>
<zh_TW>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</zh_TW>
<it>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</it>
<ja>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</ja>
<no>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</no>
<pl>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</pl>
<pt>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</pt>
<ru>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</ru>
<sk>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</sk>
<sv>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</sv>
<uk>
<p>If a metadata record contains an associated fulltext file, <CDSNAMEINTL>
tries to extract references automatically from that file and index
them into a separate <code>reference</code> index.  To search for
all records that cite <em>Ellis</em> in their reference lists,
type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite preprint <em>hep-ph/0103062</em>
in their reference lists, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

To search for all records that cite an article from <em>Giddings</em> and <em>Ross</em> published in
<em>Physical Review D</em> in volume <em>61</em> in year <em>2000</em>, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

Recall that citation terms aren't included in the default global "any field" index,
but that you may freely combine a citation search with a metadata search.
For example, to find all articles on <em>standard model</em> that aren't written by
<em>Ellis</em> but that do cite him, type:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">any field<option>title<option>author</select>
      <input class="formbutton" type="submit" name="action" value="SEARCH">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   IMPORTANT NOTE
   </th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Currently, the reference indexes aren't available on the CERN site.
      The citation search is therefore impossible at the moment.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</uk>
<es>
<p>Si un registro de metadatos contiene un fichero de texto asociado,
<CDSNAMEINTL> trata de extraer las citas automaticamente del fichero e
indexarlas en un índice separado de <code>citas</code>.  Para
recuperar todos los registros que citan a <em>Ellis</em> en sus
listados de citas bibliogáficas, escribiremos:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

Para recuperar todos los registros que citan el pre-print
<em>hep-ph/0103062</em>en sus listados de citas bibliográficas,
escribiremos:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

Para recuperar todos los documentos que citan un artículo de
<em>Giddings</em> y <em>Ross</em>publicado en <em>Physical Review
D</em> volumen <em>61</em> y en el año <em>2000</em>, escribiremos:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:20000">
      <select name="f"><option value="">cualquier campo<option>t&iacute;tulo<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

Recuerde que los términos de las citaciones no estan incluidos dentro
del índice “cualquier campo” en la búsqueda global predeterminada,
pero puede realizar una combinación libre entre búsqueda por cita
bibliogràfica y por metadatos.  Por ejemplo, para recuperar todos los
artículos sobre <em>modelo estándar</em> que no han sido escritos por
<em>Ellis</em> pero lo citan, escribiremos:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">cualquier campo<option> t&iacute;tulo <option>autor</select>
      <input class="formbutton" type="submit" name="action" value="BUSCAR">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   NOTA IMPORTANTE</th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Actualmente, los índices de citas bibliográficas no estan disponibles en la pàgina web.  La búsqueda por cita bibliográfica es imposible en este momento.
      Assumed operational time: Q1 2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</es>

<ca>
<p>Si un registre de metadades conté un fitxer de text associat,
<CDSNAMEINTL> tracta de extraure les referències automàticament del
fitxer e indexar-les a un índex separat de <code>referències</code>.
Para recuperar tots els registres que citen a <em>Ellis</em> en els
seus llistats de referències bibliogràfiques, escriurem:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:Ellis">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

Per recuperar tots els registres que citen el pre-print
<em>hep-ph/0103062</em>en els seus llistats de referències
bibliogràfiques, escriurem:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="reference:hep-ph/0103062">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

Per recuperar tots els documents que citen un article de
<em>Giddings</em> i <em>Ross</em>publicat a <em>Physical Review D</em>
volum <em>61</em> i a l’any <em>2000</em>, escriurem:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size=70 type="text" name="p" value="reference:giddings reference:ross reference:&quot;Phys. Rev., D&quot; reference:61 reference:2000">
      <select name="f"><option value="">qualsevol camp<option>t&iacute;tol<option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

Recordi que els termes de les referències no estan inclosos dins
l’índex “qualsevol camp” a la cerca global predeterminada, però pot
realitzar una combinació lliure entre cerca por referència i per
metadades.

Per exemple, per recuperar tots els articles sobre <em>model
estàndar</em> que no han estat escrits per <em>Ellis</em> però el
citen, escriurem:

      <form action="<WEBURL>/search" method="get">
      <blockquote>
      <input size="40" type="text" name="p" value="standard model -author:ellis reference:ellis">
      <select name="f"><option value="">qualsevol camp<option> t&iacute;tol <option>autor</select>
      <input class="formbutton" type="submit" name="action" value="CERCA">
      </blockquote>
      </form>

<ifeq "<CFG_CERN_SITE>" "1" "
   <p><table class="errorbox">
   <thead>
   <tr>
   <th class="errorboxheader">
   NOTA IMPORTANT</th>
   </tr>
   </thead>
   <tbody>
   <tr>
   <td class="errorboxbody">
      Actualment, els índexs de referències bibliogràfiques no estan
      disponibles a la pàgina web.  La cerca per cita bibliogràfica no
      és possible en aquest moment.  Assumed operational time: Q1
      2007.
   </td>
   </tr>
   </tbody>
   </table>
">
</ca>
</lang>