#!@PYTHON@
## -*- mode: python; coding: utf-8; -*-
##
## $Id$
##
## This file is part of CDS Invenio.
## Copyright (C) 2002, 2003, 2004, 2005, 2006 CERN.
##
## CDS Invenio is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 2 of the
## License, or (at your option) any later version.
##
## CDS Invenio is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.  
##
## You should have received a copy of the GNU General Public License
## along with CDS Invenio; if not, write to the Free Software Foundation, Inc.,
## 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

"""
BibStat reports some interesting numbers on CDS Invenio bibliographic record set.
"""

__version__ = "$Id$"

## import interesting modules:
try:
    import sys
    from invenio.dbquery import run_sql
    from marshal import loads,dumps
    from zlib import compress,decompress
    from string import split,translate,lower,upper
    import getopt
    import string
    import os
    import re
    import time
    import urllib
    import signal
    import threading 
    import unicodedata
    import traceback
    import cStringIO
except ImportError, e:
    print "Error: %s" % e
    import sys
    sys.exit(1)

def report_table_status(tablename):
    """Report stats for the table TABLENAME."""
    out = ""
    res = run_sql("SHOW TABLE STATUS LIKE %s", (tablename,))
    for row in res:
        out += "%14s %17d %17d %17d" % (row[0], row[3], row[5], row[7]) # Name, Rows, Data_length, Max_data_length
    return out    

def report_on_all_bibliographic_tables():
    """Report stats for all the interesting bibliographic tables."""
    print "%14s %17s %17s %17s" % ("TABLE", "ROWS", "DATA SIZE", "INDEX SIZE")
    print "============== ================= ================= ================="
    for i in range(0,10):
        for j in range(0,10):
            print report_table_status("bib%1d%1dx" % (i, j))
            print report_table_status("bibrec_bib%1d%1dx" % (i, j))
    for i in range(0,11):
        print report_table_status("idxWORD%02dF" % i)
        print report_table_status("idxWORD%02dR" % i)
    for i in range(0,11):
        print report_table_status("idxPHRASE%02dF" % i)
        print report_table_status("idxPHRASE%02dR" % i)
    return     

def usage(exitcode=1, msg=""):
    """Prints usage info."""
    if msg:
        sys.stderr.write("Error: %s.\n" % msg)
    sys.stderr.write("Usage: %s [options]\n" % sys.argv[0])
    sys.stderr.write("General options:\n")
    sys.stderr.write("  -h, --help      \t\t Print this help.\n")
    sys.stderr.write("  -V, --version   \t\t Print version information.\n")
    sys.exit(exitcode)

def main():
    """Report stats on the CDS Invenio bibliographic tables."""
    try:
        opts, args = getopt.getopt(sys.argv[1:], "hV", ["help", "version"])
    except getopt.GetoptError, err:
        usage(1, err)
    if opts:
        for opt in opts:
            if opt[0] in ["-h", "--help"]:
                usage(0)
            elif opt[0] in ["-V", "--version"]:
                print __version__
                sys.exit(0)
            else:
                usage(1)
    else:
        report_on_all_bibliographic_tables()        

if __name__ == "__main__":
    main()


