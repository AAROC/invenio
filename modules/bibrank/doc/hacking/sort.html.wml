## $Id$

## This file is part of the CERN Document Server Software (CDSware).
## Copyright (C) 2002 CERN.
##
## The CDSware is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 2 of the
## License, or (at your option) any later version.
##
## The CDSware is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with CDSware; if not, write to the Free Software Foundation, Inc.,
## 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

#include "cdspage.wml" \
    title="Sort Method" \
    navbar_name="hacking-bibrank" \
    navtrail_previous_links="<a class=navtrail href=<WEBURL>/hacking/>Hacking CDSware</a>  &gt; <a class=navtrail href=<WEBURL>/hacking/bibrank/>BibRank Internals</a> " \
    navbar_select="hacking-bibrank-index" 

<pre>
<blockquotes>
Describes how the sorting of records into the star categories are done in bibrank.

   1. Delete all records from received structure which isn't in the collection(s) or id range given by
      --collection or --id.

   2. Initializing the star categories.

   3. Deletes records with negative value and add them to the 1.star category, basically it means that
      we have some data needed by the rank method, but not enough for a rank value to be calculated.

   4. Sorting the keys (record id's)  left based on the value (rank value).

   5. Find out what is the lowest rank value of the x% highest values (given by top_star_percentage in cfg file).

   6. Use this value to get a slice of the records with rank value equal or higher to the value from 5.

   7. Split the rest of the range into the number of stars minus 2 categories. So if you have 5 stars and values between 1-7,
      and the top star is 4-7, then star 2 is 1-2,star 3 is 2-3 and star 4 3-4.

   8. Use the range of each star to get the slice of records with values in the range.

   9. Add all records not in any other category to the 0.star.

  10. Save the threshold/value ranges so that it later can be used for quick updates of the rank method.
</pre>
</blockquotes>
