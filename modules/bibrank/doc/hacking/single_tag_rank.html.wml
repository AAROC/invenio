## $Id$

## This file is part of the CERN Document Server Software (CDSware).
## Copyright (C) 2002 CERN.
##
## The CDSware is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 2 of the
## License, or (at your option) any later version.
##
## The CDSware is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with CDSware; if not, write to the Free Software Foundation, Inc.,
## 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

#include "cdspage.wml" \
    title="Single Tag Rank Method" \
    navbar_name="hacking-bibrank" \
    navtrail_previous_links="<a class=navtrail href=<WEBURL>/hacking/>Hacking CDSware</a>  &gt; <a class=navtrail href=<WEBURL>/hacking/bibrank/>BibRank Internals</a> " \
    navbar_select="hacking-bibrank-index" 

<pre>
<blockquotes>
When running a rank method, the first thing that happen after the configuration file is loaded, is that the records that should be taken
into account are found. If the user used options like --collection or --id to specify which records to check, the records in the
collections/ranges will be added to a variable, so that they later can be used for filtering out unwanted records.

Then the function responsible for creating the rank method specified in the configuration file will be
called. In this case the single_tag_rank_method function.

Configuration file:
    [rank_method]
    function = single_tag_rank_method

    [single_tag_rank]
    tag = 909C4p
    kb_src = /log/cdsware-DEMODEV/etc/bibrank/stm.kb
    check_mandatory_tags = 909C4c

Process:
   1. Any records that is going to be added is found.
   2. If existing, and if a update is going to be done, existing data is loaded from database.
   3. The configuration file is loaded.
   4. Loading knowledgebase file.
   5. Getting records from the database containing the MARC21 tag from the configfile, and which are among the ones 
      to be updated.
   6. The function will then go through all records, and if we have the value for the record as a key in the kb file, 
      the value from the kb file will be associated to this record id. If the record id already has a value, this 
      will be replaced if the newest is higher than the old one, and if there is no match in kb_data it will get the 
      value -1.
   7. The database is updated.
</pre>
</blockquotes>
